"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "RESTBaseAPI", {
  enumerable: true,
  get: function get() {
    return _api.default;
  }
});
Object.defineProperty(exports, "Block", {
  enumerable: true,
  get: function get() {
    return _block.Block;
  }
});
Object.defineProperty(exports, "Wrap", {
  enumerable: true,
  get: function get() {
    return _wrap.Wrap;
  }
});
Object.defineProperty(exports, "StoreWrap", {
  enumerable: true,
  get: function get() {
    return _wrap.StoreWrap;
  }
});
Object.defineProperty(exports, "wrap", {
  enumerable: true,
  get: function get() {
    return _wrap.wrap;
  }
});
exports.use = exports.config = exports.api = exports.app = exports.default = void 0;

var _app = _interopRequireDefault(require("./app"));

var _rrs = _interopRequireDefault(require("./rrs"));

var _api = _interopRequireDefault(require("./api"));

var _block = require("./block");

var _wrap = require("./wrap");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var base = {
  items: {
    config: {
      type: 'map'
    },
    context: {
      type: 'array'
    },
    start: {
      type: 'array'
    },
    logger: {
      type: 'array'
    },
    blocks: {
      type: 'mapArray'
    },
    mappers: {
      type: 'mapArray'
    },
    hooks: {
      type: 'mapArray'
    }
  }
};

if (window.__app__ == undefined) {
  window.__app__ = (0, _rrs.default)(new _app.default().use(base));
}

var app = window.__app__;
exports.app = app;

var config = (key, default_value) => {
  return app.get('config')[key] || default_value;
};

exports.config = config;

var api = opt => {
  var API = config('api');

  if (API) {
    return new API(opt);
  } else {
    throw 'App API not implement!!!';
  }
};

exports.api = api;

var use = (key, props, select) => {
  var hooks = app.get('hooks')[key];

  if (typeof props == 'function' && select == undefined) {
    select = props;
    props = {};
  }

  return hooks ? hooks.reduce((prev, hook) => {
    return hook(prev, select);
  }, props || {}) : props || {};
};

exports.use = use;
var _default = app;
exports.default = _default;