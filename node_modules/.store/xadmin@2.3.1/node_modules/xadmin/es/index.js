import App from './app';
import rrs from './rrs';
import RESTBaseAPI from './api';
import { Block } from './block';
import { Wrap, StoreWrap, wrap } from './wrap';
var base = {
  items: {
    config: {
      type: 'map'
    },
    context: {
      type: 'array'
    },
    start: {
      type: 'array'
    },
    logger: {
      type: 'array'
    },
    blocks: {
      type: 'mapArray'
    },
    mappers: {
      type: 'mapArray'
    },
    hooks: {
      type: 'mapArray'
    }
  }
};

if (window.__app__ == undefined) {
  window.__app__ = rrs(new App().use(base));
}

var app = window.__app__;

var config = (key, default_value) => {
  return app.get('config')[key] || default_value;
};

var api = opt => {
  var API = config('api');

  if (API) {
    return new API(opt);
  } else {
    throw 'App API not implement!!!';
  }
};

var use = (key, props, select) => {
  var hooks = app.get('hooks')[key];

  if (typeof props == 'function' && select == undefined) {
    select = props;
    props = {};
  }

  return hooks ? hooks.reduce((prev, hook) => {
    return hook(prev, select);
  }, props || {}) : props || {};
};

export default app;
export { app, api, config, use, RESTBaseAPI, Block, Wrap, StoreWrap, wrap };