
const chalk = require("chalk");

const getHost = () => {
  const envs = process.env
  const args = process.argv
  
  let host
  const hostArgs = args.filter(arg => arg.startsWith("--host="))
  if(hostArgs.length != 0) {
    host = hostArgs[0].replace('--host=', '')
  } else if(envs.IOT_URL) {
    host = envs.IOT_URL
  } else {
    console.error('[iot:envs] 请设置环境变量 IOT_URL')
    process.exit()
  }

  if(host.endsWith('/')) {
    host = host.substring(0, host.length - 1)
  }
  
  console.log(chalk.green('[iot:envs] 请求 IOT_URL 为: ' + host))
  return host
}

const isLocal = () => {
  const envs = process.env
  const args = process.argv

  let useLocal = false

  const hostArgs = args.filter(arg => arg.startsWith("--local="))
  if(hostArgs.length != 0) {
    useLocal = hostArgs[0].replace('--local=', '') == 'true'
  } else if(envs.IOT_URL) {
    useLocal = envs.LOCAL == 'true'
  }

  return useLocal
}

const getModule = (env) => {
  const envs = process.env
  const args = process.argv

  let modules = env == 'production' ? 'all' : 'admin'

  const hostArgs = args.filter(arg => arg.startsWith("--module="))
  if(hostArgs.length != 0) {
    modules = hostArgs[0].replace('--module=', '')
  } else if(envs.IOT_MODULE) {
    useLocal = envs.IOT_MODULE
  }

  return modules
}

module.exports = {
  getHost, isLocal, getModule
}
