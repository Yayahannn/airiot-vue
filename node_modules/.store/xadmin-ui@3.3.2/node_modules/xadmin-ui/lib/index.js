"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.apps = exports.Select = exports.Check = exports.Input = exports.Alert = exports.List = exports.Empty = exports.Tabs = exports.Table = exports.Tooltip = exports.Popover = exports.Button = exports.Modal = exports.Card = exports.Badge = exports.Menu = exports.Dropdown = exports.App = exports.Dashboard = exports.Main = exports.Loading = exports.Icon = exports.Page = exports.lazy = exports.C = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _xadmin = _interopRequireDefault(require("xadmin"));

var _reactRouterDom = require("react-router-dom");

var _splashscreen = _interopRequireDefault(require("./splashscreen"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var C = args => {
  if (typeof args == 'string') {
    return _xadmin.default.get('components')[args];
  } else {
    var {
      is
    } = args,
        props = _objectWithoutProperties(args, ["is"]);

    var Component = C(is);
    if (Component) return /*#__PURE__*/_react.default.createElement(Component, props);else return /*#__PURE__*/_react.default.createElement("div", null, "Component ", is, " not found.");
  }
};

exports.C = C;

C.lazy = is => props => C(_objectSpread({
  is
}, props));

var Main = C.lazy('Main');
exports.Main = Main;
var App = C.lazy('App');
exports.App = App;
var Dashboard = C.lazy('Dashboard');
exports.Dashboard = Dashboard;
var Page = C.lazy('Page');
exports.Page = Page;
var Icon = C.lazy('Icon');
exports.Icon = Icon;
var Loading = C.lazy('Loading');
exports.Loading = Loading;
var Dropdown = C.lazy('Dropdown');
exports.Dropdown = Dropdown;
var Menu = C.lazy('Menu');
exports.Menu = Menu;
Menu.SubMenu = C.lazy('Menu.SubMenu');
Menu.Item = C.lazy('Menu.Item');
/** UI Components */

var Badge = C.lazy('Badge');
exports.Badge = Badge;
var Card = C.lazy('Card');
exports.Card = Card;
var Modal = C.lazy('Modal');
exports.Modal = Modal;
var Button = C.lazy('Button');
exports.Button = Button;
var Popover = C.lazy('Popover');
exports.Popover = Popover;
var Tooltip = C.lazy('Tooltip');
exports.Tooltip = Tooltip;
var Table = C.lazy('Table');
exports.Table = Table;
var Tabs = C.lazy('Tabs');
exports.Tabs = Tabs;
Tabs.Item = C.lazy('Tabs.Item');
var Empty = C.lazy('Empty');
exports.Empty = Empty;
var List = C.lazy('List');
exports.List = List;
List.Item = C.lazy('List.Item');
var Alert = C.lazy('Alert');
exports.Alert = Alert;
var Input = C.lazy('Input');
exports.Input = Input;
Input.Static = C.lazy('Input.Static');
var Check = C.lazy('Check');
exports.Check = Check;
var Select = C.lazy('Select');
exports.Select = Select;

var lazy = (fn, fallback) => {
  var Component = /*#__PURE__*/_react.default.lazy(fn);

  return /*#__PURE__*/_react.default.forwardRef((props, ref) => /*#__PURE__*/_react.default.createElement(_react.default.Suspense, {
    fallback: fallback || /*#__PURE__*/_react.default.createElement(Loading, null)
  }, /*#__PURE__*/_react.default.createElement(Component, _extends({
    ref: ref
  }, props))));
};

exports.lazy = lazy;
var _default = {
  name: 'xadmin.ui',
  items: {
    components: {
      type: 'map'
    }
  },
  routers: {
    '@': {
      path: '/',
      component: Main
    },
    '/': [{
      index: true,
      element: /*#__PURE__*/_react.default.createElement(_reactRouterDom.Navigate, {
        to: "/app/",
        replace: true
      })
    }, {
      path: 'app/',
      component: App
    }],
    '/app/': [{
      index: true,
      component: Dashboard
    }, {
      path: 'dashboard',
      component: Dashboard
    }]
  },
  reducers: {
    loading: function loading() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var {
        type,
        key
      } = arguments.length > 1 ? arguments[1] : undefined;

      if (!key) {
        return state;
      }

      switch (type) {
        case 'START_LOADING':
          return _objectSpread(_objectSpread({}, state), {}, {
            [key]: true
          });

        case 'END_LOADING':
          return _objectSpread({}, _.omit(state, key));

        default:
          return state;
      }
    }
  }
};
exports.default = _default;
var apps = {
  splashscreen: _splashscreen.default
};
exports.apps = apps;