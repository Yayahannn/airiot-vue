"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _omit = _interopRequireDefault(require("lodash/omit"));

var _reactReduxLoadingBar = _interopRequireWildcard(require("react-redux-loading-bar"));

var _effects = require("redux-saga/effects");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _default = {
  name: 'xadmin.loading',
  blocks: {
    'body': () => /*#__PURE__*/_react.default.createElement(_reactReduxLoadingBar.default, {
      key: "loading",
      style: {
        zIndex: 9999,
        height: 3,
        position: 'absolute',
        backgroundColor: 'rgba(82, 196, 26, 0.45)'
      }
    })
  },
  reducers: {
    loadingBar: function loadingBar() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var action = arguments.length > 1 ? arguments[1] : undefined;

      switch (action.type) {
        case 'persist/REHYDRATE':
          return 0;

        default:
          return (0, _reactReduxLoadingBar.loadingBarReducer)(state, action);
      }
    },
    loading: function loading() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var {
        type,
        key
      } = arguments.length > 1 ? arguments[1] : undefined;

      if (!key) {
        return state;
      }

      switch (type) {
        case 'START_LOADING':
          return _objectSpread(_objectSpread({}, state), {}, {
            [key]: true
          });

        case 'END_LOADING':
          return _objectSpread({}, (0, _omit.default)(state, key));

        default:
          return state;
      }
    }
  },
  effects: app => function* () {
    yield (0, _effects.all)([(0, _effects.takeEvery)('START_LOADING', function* () {
      yield (0, _effects.put)((0, _reactReduxLoadingBar.showLoading)());
    }), (0, _effects.takeEvery)('END_LOADING', function* () {
      yield (0, _effects.put)((0, _reactReduxLoadingBar.hideLoading)());
    })]);
  }
};
exports.default = _default;