"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "IsAuthenticated", {
  enumerable: true,
  get: function get() {
    return _wrap.IsAuthenticated;
  }
});
Object.defineProperty(exports, "ShowAuthenticated", {
  enumerable: true,
  get: function get() {
    return _wrap.ShowAuthenticated;
  }
});
Object.defineProperty(exports, "IsSuperUser", {
  enumerable: true,
  get: function get() {
    return _wrap.IsSuperUser;
  }
});
Object.defineProperty(exports, "HasPermission", {
  enumerable: true,
  get: function get() {
    return _wrap.HasPermission;
  }
});
Object.defineProperty(exports, "perm", {
  enumerable: true,
  get: function get() {
    return _wrap.perm;
  }
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _hooks = _interopRequireDefault(require("./hooks"));

var _xadminUi = require("xadmin-ui");

var _SignIn = _interopRequireDefault(require("./components/SignIn"));

var _SignUp = _interopRequireDefault(require("./components/SignUp"));

var _ForgetPassword = _interopRequireDefault(require("./components/ForgetPassword"));

var _ResetPassword = _interopRequireDefault(require("./components/ResetPassword"));

var _ChangePassword = _interopRequireDefault(require("./components/ChangePassword"));

var _models = _interopRequireDefault(require("./models"));

var _context = require("./context");

var _wrap = require("./wrap");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var _default = {
  name: 'xadmin.auth',
  config: {
    auth: {
      can_reset_password: true,
      can_change_password: true,
      can_signup: true,
      can_signin: true,
      persist_type: 'localforage'
    }
  },
  blocks: {
    'top.right': props => /*#__PURE__*/_react.default.createElement(_xadminUi.C, _extends({
      is: "Auth.UserMenu",
      key: "auth.user"
    }, props))
  },
  components: {
    App: props => /*#__PURE__*/_react.default.createElement(_wrap.IsAuthenticated, null, /*#__PURE__*/_react.default.createElement(_xadminUi.C, _extends({
      is: "BaseApp"
    }, props)))
  },
  root_component: app => children => /*#__PURE__*/_react.default.createElement(_context.UserRoot, null, children),
  routers: app => {
    var {
      auth
    } = app.load_dict('config');
    var routes = [];

    if (auth.can_signin) {
      routes.push({
        path: 'login',
        component: _SignIn.default
      });
    }

    if (auth.can_signup) {
      routes.push({
        path: 'signup',
        component: _SignUp.default
      });
    }

    if (auth.can_reset_password) {
      routes.push({
        path: 'forget_password',
        component: _ForgetPassword.default
      });
      routes.push({
        path: 'password_reset_confirm',
        component: _ResetPassword.default
      });
    }

    return {
      '/': routes,
      '/app/': {
        path: 'change_password',
        component: _ChangePassword.default
      }
    };
  },
  schema_converter: (f, schema) => {
    if (schema.type === 'string' && schema.fieldType == 'captcha') {
      f.type = 'captcha';
    }

    return f;
  },
  models: _models.default,
  hooks: _hooks.default
};
exports.default = _default;