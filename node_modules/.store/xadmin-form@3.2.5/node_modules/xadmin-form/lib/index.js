"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "FieldArray", {
  enumerable: true,
  get: function get() {
    return _reactFinalFormArrays.FieldArray;
  }
});
Object.defineProperty(exports, "BaseForm", {
  enumerable: true,
  get: function get() {
    return _base.BaseForm;
  }
});
Object.defineProperty(exports, "Form", {
  enumerable: true,
  get: function get() {
    return _base.Form;
  }
});
Object.defineProperty(exports, "SchemaForm", {
  enumerable: true,
  get: function get() {
    return _base.SchemaForm;
  }
});
Object.defineProperty(exports, "fieldBuilder", {
  enumerable: true,
  get: function get() {
    return _base.fieldBuilder;
  }
});
Object.defineProperty(exports, "objectBuilder", {
  enumerable: true,
  get: function get() {
    return _base.objectBuilder;
  }
});
Object.defineProperty(exports, "prefixFieldKey", {
  enumerable: true,
  get: function get() {
    return _base.prefixFieldKey;
  }
});
Object.defineProperty(exports, "schemaConvert", {
  enumerable: true,
  get: function get() {
    return _base.schemaConvert;
  }
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _ajv = _interopRequireDefault(require("ajv"));

var _schema = require("./schema");

var _reactFinalFormArrays = require("react-final-form-arrays");

var _base = require("./base");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ajv = new _ajv.default({
  allErrors: true
});
var app = {
  name: 'xadmin-form',
  items: {
    form_fields: {
      type: 'map'
    },
    schema_converter: {
      type: 'array'
    },
    form_reducer: {
      type: 'map'
    },
    array_render: {
      type: 'map'
    },
    ajv_key: {
      type: 'array'
    },
    ajv_format: {
      type: 'array'
    }
  },
  start: app => () => {
    app.get('ajv_key').forEach(args => {
      ajv.addKeyword(args[0], args[1]);
    });
    app.get('ajv_format').forEach(args => {
      ajv.addFormat(args[0], args[1]);
    });
  },
  hooks: {
    form: _base.useForm
  },
  schema_converter: _schema.converters
};
var _default = app;
exports.default = _default;