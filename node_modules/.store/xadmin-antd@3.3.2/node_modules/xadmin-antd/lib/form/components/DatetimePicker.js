"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _moment = _interopRequireDefault(require("moment"));

var _antd = require("antd");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class DatetimePicker extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "onChange", value => {
      var {
        input,
        field
      } = this.props;
      var format = field.datetimeFormat || 'YYYY-MM-DD HH:mm:ss';
      input.onChange(value && value.format(format));
    });

    _defineProperty(this, "onBlur", value => {
      var {
        input,
        field
      } = this.props;
      var format = field.datetimeFormat || 'YYYY-MM-DD HH:mm:ss';
      input.onChange(value && value.format(format));
    });
  }

  render() {
    var {
      input,
      field
    } = this.props;
    var format = field.datetimeFormat || 'YYYY-MM-DD HH:mm:ss';
    return /*#__PURE__*/_react.default.createElement(_antd.DatePicker, {
      disabledDate: this.disabledStartDate,
      showTime: true,
      allowClear: true,
      format: format,
      value: input.value ? (0, _moment.default)(input.value) : null,
      onChange: this.onChange,
      onBlur: input.onBlur,
      style: {
        minWidth: 230
      }
    });
  }

}

var _default = DatetimePicker;
exports.default = _default;