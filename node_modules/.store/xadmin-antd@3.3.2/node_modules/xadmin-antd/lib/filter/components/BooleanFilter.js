"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _lodash = _interopRequireDefault(require("lodash"));

var _xadmin = _interopRequireDefault(require("xadmin"));

var _xadminI18n = require("xadmin-i18n");

var _antd = require("antd");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var _default = props => {
  var {
    input: {
      name,
      value,
      onChange
    },
    field
  } = props,
      inputProps = _objectWithoutProperties(props.input, ["name", "value", "onChange"]);

  var disabled = value === null || value === undefined || value === '';
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_antd.Tooltip, {
    title: (0, _xadminI18n._t)('Use this filter')
  }, disabled ? /*#__PURE__*/_react.default.createElement(_antd.Checkbox, {
    checked: false,
    onClick: () => onChange(true)
  }) : /*#__PURE__*/_react.default.createElement(_antd.Checkbox, {
    checked: true,
    onClick: () => onChange(null)
  })), ' ', /*#__PURE__*/_react.default.createElement(_antd.Switch, {
    checked: value,
    disabled: disabled,
    onChange: onChange,
    checkedChildren: field.boolLabel ? field.boolLabel[0] : (0, _xadminI18n._t)('True'),
    unCheckedChildren: field.boolLabel ? field.boolLabel[1] : (0, _xadminI18n._t)('False')
  }));
};

exports.default = _default;