"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _lodash = _interopRequireDefault(require("lodash"));

var _xadminUi = require("xadmin-ui");

var _xadminForm = require("xadmin-form");

var _antd = require("antd");

var _Items = require("./Items");

var _xadmin = require("xadmin");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var FieldGroup = (_ref) => {
  var {
    label,
    field,
    children
  } = _ref;
  var attrs = field.attrs || {};
  var extra = field.description || field.help;
  var size = field.option && field.option.groupSize || attrs.groupSize || {
    labelCol: {
      xs: {
        span: 24
      },
      sm: {
        span: 5
      }
    },
    wrapperCol: {
      xs: {
        span: 24
      },
      sm: {
        span: 18
      }
    }
  };

  var groupProps = _objectSpread(_objectSpread({
    extra
  }, size), {}, {
    required: field.required
  });

  return /*#__PURE__*/_react.default.createElement(_antd.Form.Item, _extends({
    label: label
  }, groupProps), children);
};

var ModelInfo = (_ref2) => {
  var {
    data,
    title,
    schema,
    model,
    loading,
    saveItem
  } = _ref2,
      formProps = _objectWithoutProperties(_ref2, ["data", "title", "schema", "model", "loading", "saveItem"]);

  var renderFields = () => {
    return (0, _xadminForm.schemaConvert)(model).fields.map(field => {
      field.option = _objectSpread(_objectSpread({}, field.option), formProps);
      return /*#__PURE__*/_react.default.createElement(FieldGroup, {
        key: field.key,
        label: field.label,
        field: field
      }, /*#__PURE__*/_react.default.createElement(_Items.Item, {
        item: data,
        field: field.key,
        value: data[field.key],
        inList: false,
        selected: false,
        wrap: (_ref3) => {
          var {
            children
          } = _ref3;
          return children;
        }
      }));
    });
  };

  return loading ? /*#__PURE__*/_react.default.createElement(_xadminUi.Loading, null) : /*#__PURE__*/_react.default.createElement(_antd.Form, null, /*#__PURE__*/_react.default.createElement(_antd.Card, null, renderFields()));
};

var _default = props => /*#__PURE__*/_react.default.createElement(ModelInfo, _extends({}, props, (0, _xadmin.use)('model.get', props)));

exports.default = _default;