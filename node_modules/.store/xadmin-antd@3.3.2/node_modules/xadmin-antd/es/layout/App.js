function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import { config as _c, Block, app } from 'xadmin';
import { Layout, Menu, Breadcrumb } from 'antd';
import { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';
var {
  Header,
  Content,
  Footer,
  Sider
} = Layout;
var SubMenu = Menu.SubMenu;

function itemRender(route, params, routes, paths) {
  var last = routes.indexOf(route) === routes.length - 1;

  var click = to => () => app.go(to);

  return last ? /*#__PURE__*/React.createElement("span", null, route.breadcrumbName) : /*#__PURE__*/React.createElement("a", {
    onClick: click('/' + paths.join(''))
  }, route.breadcrumbName);
}

class MenuBar extends React.Component {
  render() {
    return /*#__PURE__*/React.createElement(Block, {
      name: "main.menu"
    }, items => /*#__PURE__*/React.createElement(Menu, {
      theme: "dark",
      mode: this.props.mode
    }, items));
  }

}

class App extends React.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {
      collapsed: false,
      mode: 'inline'
    });

    _defineProperty(this, "toggle", () => {
      this.setState({
        collapsed: !this.state.collapsed,
        mode: !this.state.collapsed ? 'vertical' : 'inline'
      });
    });
  }

  render() {
    var {
      routes,
      params
    } = this.props;
    var Icon = this.state.collapsed ? MenuFoldOutlined : MenuUnfoldOutlined;
    return /*#__PURE__*/React.createElement(Layout, {
      style: {
        minHeight: '100vh'
      }
    }, /*#__PURE__*/React.createElement(Sider, {
      trigger: null,
      collapsible: true,
      collapsed: this.state.collapsed,
      style: {
        overflow: 'auto',
        height: '100vh',
        position: 'fixed',
        left: 0
      }
    }, /*#__PURE__*/React.createElement("div", {
      className: "logo"
    }, _c('site.logo'), _c('site.title', 'Admin')), /*#__PURE__*/React.createElement(MenuBar, {
      mode: this.state.mode
    })), /*#__PURE__*/React.createElement(Layout, {
      style: {
        marginLeft: this.state.collapsed ? 80 : 200,
        transition: 'margin .2s'
      }
    }, /*#__PURE__*/React.createElement(Header, {
      style: {
        background: '#fff',
        boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 3px',
        zIndex: 10
      }
    }, /*#__PURE__*/React.createElement(Icon, {
      className: "trigger pull-left",
      onClick: this.toggle,
      style: {
        lineHeight: 'inherit',
        marginLeft: -40,
        fontSize: '1.2rem'
      }
    }), /*#__PURE__*/React.createElement("div", {
      style: {
        float: 'right'
      }
    }, /*#__PURE__*/React.createElement(Block, {
      name: "top.right"
    }, items => /*#__PURE__*/React.createElement(Menu, {
      mode: "horizontal",
      style: {
        lineHeight: '62px'
      }
    }, items)))), /*#__PURE__*/React.createElement(Content, null, this.props.children), /*#__PURE__*/React.createElement(Footer, {
      style: {
        textAlign: 'center'
      }
    }, "\xA9 ", /*#__PURE__*/React.createElement("slot", null, _c('site.copyright')))));
  }

}

export default App;