function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { Modal, Menu, List } from 'antd';
import { app, use } from 'xadmin';
import { Icon } from 'xadmin-ui';

var BatchDeleteBtn = props => {
  var {
    _t
  } = app.context;
  var [show, setShow] = React.useState(false);
  var {
    canDelete,
    loading,
    onBatchDelete
  } = use('actons.batch_delete');
  var {
    selected
  } = use('model.select');
  var {
    model
  } = use('model');

  var onClose = () => {
    setShow(false);
  };

  var renderModel = () => {
    return /*#__PURE__*/React.createElement(Modal, {
      key: "actions_batch_delete_modal",
      title: _t('Confirm to delete selected items'),
      visible: show,
      onOk: () => {
        onBatchDelete().then(onClose);
      },
      okText: _t('Delete'),
      okType: "danger",
      cancelText: _t('Cancel'),
      onCancel: onClose,
      okButtonProps: {
        loading
      }
    }, /*#__PURE__*/React.createElement(List, {
      dataSource: selected,
      renderItem: item => /*#__PURE__*/React.createElement(List.Item, {
        key: item.id
      }, /*#__PURE__*/React.createElement(Icon, {
        name: model.icon
      }), " ", model.display ? model.display(item) : item.name)
    }));
  };

  return canDelete ? [/*#__PURE__*/React.createElement(Menu.Item, _extends({}, props, {
    key: 'actions_batch_delete',
    onClick: e => {
      props.onClick && props.onClick(e);
      setShow(true);
    },
    disabled: selected.length == 0
  }), _t('Batch Delete Items')), selected.length > 0 ? renderModel() : null] : null;
};

export default BatchDeleteBtn;