function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import { DatePicker } from 'antd';
import moment from 'moment';
export default class DatePickerInput extends React.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "onChange", value => {
      var {
        input
      } = this.props;
      input.onChange(this.getValue(value));
    });
  }

  getValue(value) {
    var {
      field
    } = this.props;
    var format = field.datetimeFormat || 'YYYY-MM-DD';
    return value && value.format(format);
  }

  render() {
    var {
      input,
      field
    } = this.props;
    var format = field.datetimeFormat || 'YYYY-MM-DD';
    return /*#__PURE__*/React.createElement(DatePicker, _extends({
      allowClear: true
    }, input, {
      onChange: this.onChange,
      value: input.value ? moment(input.value) : null,
      format: format
    }));
  }

}