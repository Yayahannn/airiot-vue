function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import moment from 'moment';
import { DatePicker } from 'antd';

class DatetimePicker extends React.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "onChange", value => {
      var {
        input,
        field
      } = this.props;
      var format = field.datetimeFormat || 'YYYY-MM-DD HH:mm:ss';
      input.onChange(value && value.format(format));
    });

    _defineProperty(this, "onBlur", value => {
      var {
        input,
        field
      } = this.props;
      var format = field.datetimeFormat || 'YYYY-MM-DD HH:mm:ss';
      input.onChange(value && value.format(format));
    });
  }

  render() {
    var {
      input,
      field
    } = this.props;
    var format = field.datetimeFormat || 'YYYY-MM-DD HH:mm:ss';
    return /*#__PURE__*/React.createElement(DatePicker, {
      disabledDate: this.disabledStartDate,
      showTime: true,
      allowClear: true,
      format: format,
      value: input.value ? moment(input.value) : null,
      onChange: this.onChange,
      onBlur: input.onBlur,
      style: {
        minWidth: 230
      }
    });
  }

}

export default DatetimePicker;