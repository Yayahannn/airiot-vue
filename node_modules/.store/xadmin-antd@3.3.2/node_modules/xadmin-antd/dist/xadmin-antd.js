(function (global, factory) {
typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('xadmin'), require('antd'), require('@ant-design/icons'), require('xadmin-ui'), require('xadmin-i18n'), require('lodash'), require('moment'), require('xadmin-form'), require('xadmin-model')) :
typeof define === 'function' && define.amd ? define(['exports', 'react', 'xadmin', 'antd', '@ant-design/icons', 'xadmin-ui', 'xadmin-i18n', 'lodash', 'moment', 'xadmin-form', 'xadmin-model'], factory) :
(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.xadminAntd = {}, global.React, global.xadmin, global.antd, global.icons, global.xadminUi, global.xadminI18n, global._, global.moment, global.xadminForm, global.xadminModel));
}(this, (function (exports, React, app, antd, icons, xadminUi, xadminI18n, _, moment, xadminForm, xadminModel) { 'use strict';

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var app__default = /*#__PURE__*/_interopDefaultLegacy(app);
var ___default = /*#__PURE__*/_interopDefaultLegacy(_);
var moment__default = /*#__PURE__*/_interopDefaultLegacy(moment);

function unwrapExports (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var defineProperty = createCommonjsModule(function (module) {
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

var _defineProperty = unwrapExports(defineProperty);

var _extends_1 = createCommonjsModule(function (module) {
function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  module.exports["default"] = module.exports, module.exports.__esModule = true;
  return _extends.apply(this, arguments);
}

module.exports = _extends;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

var _extends = unwrapExports(_extends_1);

var objectWithoutPropertiesLoose = createCommonjsModule(function (module) {
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

module.exports = _objectWithoutPropertiesLoose;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

unwrapExports(objectWithoutPropertiesLoose);

var objectWithoutProperties = createCommonjsModule(function (module) {
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

module.exports = _objectWithoutProperties;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

var _objectWithoutProperties = unwrapExports(objectWithoutProperties);

var classCallCheck = createCommonjsModule(function (module) {
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

var _classCallCheck = unwrapExports(classCallCheck);

var createClass = createCommonjsModule(function (module) {
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

var _createClass = unwrapExports(createClass);

var setPrototypeOf = createCommonjsModule(function (module) {
function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  module.exports["default"] = module.exports, module.exports.__esModule = true;
  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

unwrapExports(setPrototypeOf);

var inherits = createCommonjsModule(function (module) {
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

var _inherits = unwrapExports(inherits);

var _typeof_1 = createCommonjsModule(function (module) {
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };

    module.exports["default"] = module.exports, module.exports.__esModule = true;
  }

  return _typeof(obj);
}

module.exports = _typeof;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

unwrapExports(_typeof_1);

var assertThisInitialized = createCommonjsModule(function (module) {
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

var _assertThisInitialized = unwrapExports(assertThisInitialized);

var possibleConstructorReturn = createCommonjsModule(function (module) {
var _typeof = _typeof_1["default"];



function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

var _possibleConstructorReturn = unwrapExports(possibleConstructorReturn);

var getPrototypeOf = createCommonjsModule(function (module) {
function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  module.exports["default"] = module.exports, module.exports.__esModule = true;
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

var _getPrototypeOf = unwrapExports(getPrototypeOf);

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = "#xadmin-main{\n  min-height: 865px;\n}\n#xadmin-main .logo {\n  text-align: center;\n  font-size: 20px;\n  padding: 10px;\n  color: #FFF;\n}\n\n#xadmin-main .logo img {\n  margin:  0;\n  cursor: pointer;\n  overflow: hidden;\n  width: 140px;\n  height: 60px;\n  margin-bottom: 5px;\n}\n\n#xadmin-main .logo span {\n  font-size: 16px;\n  color: #FFF;\n  display: block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n#xadmin-main .ant-layout-sider-collapsed .logo {\n  text-align: center;\n}\n\n#xadmin-main .ant-layout-sider-collapsed .logo img {\n  margin: 15px 0;\n  height: 35px;\n  width: 60px;\n\n}\n#xadmin-main .ant-layout-sider-collapsed .logo span {\n  display: none;\n}\n\n#xadmin-main .ant-layout-sider-collapsed .anticon {\n  font-size: 16px;\n}\n#xadmin-main .ant-layout-sider-collapsed .fa {\n  font-size: 16px;\n}\n\n#xadmin-main .ant-layout-sider-collapsed .nav-text {\n  display: none;\n}\n\n#xadmin-main .ant-layout-sider-collapsed .ant-menu-submenu-vertical > .ant-menu-submenu-title:after {\n  display: none;\n}\n\n#xadmin-main .trigger {\n  font-size: 18px;\n  padding: 0 16px;\n  line-height: 47px;\n  cursor: pointer;\n  transition: color .3s;\n}\n\n#xadmin-main .trigger:hover {\n  color: #108ee9;\n}\n\n#xadmin-main .ant-layout-header .pull-right .ant-menu-horizontal {\n  border-bottom: none;\n}\n#xadmin-main .ant-layout-header .pull-right .ant-menu-horizontal .menu-clock {\n  padding-top: 2px!important;\n}";
styleInject(css_248z);

function _createSuper$a(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$a(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$a() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
antd.Layout.Header;
    antd.Layout.Content;
    antd.Layout.Footer;
    antd.Layout.Sider;
antd.Menu.SubMenu;

var Main = /*#__PURE__*/function (_React$Component) {
  _inherits(Main, _React$Component);

  var _super = _createSuper$a(Main);

  function Main() {
    _classCallCheck(this, Main);

    return _super.apply(this, arguments);
  }

  _createClass(Main, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement(app.Block, {
        name: "body"
      }), /*#__PURE__*/React__default['default'].createElement(antd.Layout, {
        id: "xadmin-main",
        style: {
          backgroundColor: 'transparent'
        }
      }, this.props.children));
    }
  }]);

  return Main;
}(React__default['default'].Component);

function _createSuper$9(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$9(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$9() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var Header$1 = antd.Layout.Header,
    Content$1 = antd.Layout.Content,
    Footer = antd.Layout.Footer,
    Sider$1 = antd.Layout.Sider;
antd.Menu.SubMenu;

var MenuBar = /*#__PURE__*/function (_React$Component) {
  _inherits(MenuBar, _React$Component);

  var _super = _createSuper$9(MenuBar);

  function MenuBar() {
    _classCallCheck(this, MenuBar);

    return _super.apply(this, arguments);
  }

  _createClass(MenuBar, [{
    key: "render",
    value: function render() {
      var _this = this;

      return /*#__PURE__*/React__default['default'].createElement(app.Block, {
        name: "main.menu"
      }, function (items) {
        return /*#__PURE__*/React__default['default'].createElement(antd.Menu, {
          theme: "dark",
          mode: _this.props.mode
        }, items);
      });
    }
  }]);

  return MenuBar;
}(React__default['default'].Component);

var App = /*#__PURE__*/function (_React$Component2) {
  _inherits(App, _React$Component2);

  var _super2 = _createSuper$9(App);

  function App() {
    var _this2;

    _classCallCheck(this, App);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this2 = _super2.call.apply(_super2, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this2), "state", {
      collapsed: false,
      mode: 'inline'
    });

    _defineProperty(_assertThisInitialized(_this2), "toggle", function () {
      _this2.setState({
        collapsed: !_this2.state.collapsed,
        mode: !_this2.state.collapsed ? 'vertical' : 'inline'
      });
    });

    return _this2;
  }

  _createClass(App, [{
    key: "render",
    value: function render() {
      var _this$props = this.props;
          _this$props.routes;
          _this$props.params;
      var Icon = this.state.collapsed ? icons.MenuFoldOutlined : icons.MenuUnfoldOutlined;
      return /*#__PURE__*/React__default['default'].createElement(antd.Layout, {
        style: {
          minHeight: '100vh'
        }
      }, /*#__PURE__*/React__default['default'].createElement(Sider$1, {
        trigger: null,
        collapsible: true,
        collapsed: this.state.collapsed,
        style: {
          overflow: 'auto',
          height: '100vh',
          position: 'fixed',
          left: 0
        }
      }, /*#__PURE__*/React__default['default'].createElement("div", {
        className: "logo"
      }, app.config('site.logo'), app.config('site.title', 'Admin')), /*#__PURE__*/React__default['default'].createElement(MenuBar, {
        mode: this.state.mode
      })), /*#__PURE__*/React__default['default'].createElement(antd.Layout, {
        style: {
          marginLeft: this.state.collapsed ? 80 : 200,
          transition: 'margin .2s'
        }
      }, /*#__PURE__*/React__default['default'].createElement(Header$1, {
        style: {
          background: '#fff',
          boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 3px',
          zIndex: 10
        }
      }, /*#__PURE__*/React__default['default'].createElement(Icon, {
        className: "trigger pull-left",
        onClick: this.toggle,
        style: {
          lineHeight: 'inherit',
          marginLeft: -40,
          fontSize: '1.2rem'
        }
      }), /*#__PURE__*/React__default['default'].createElement("div", {
        style: {
          "float": 'right'
        }
      }, /*#__PURE__*/React__default['default'].createElement(app.Block, {
        name: "top.right"
      }, function (items) {
        return /*#__PURE__*/React__default['default'].createElement(antd.Menu, {
          mode: "horizontal",
          style: {
            lineHeight: '62px'
          }
        }, items);
      }))), /*#__PURE__*/React__default['default'].createElement(Content$1, null, this.props.children), /*#__PURE__*/React__default['default'].createElement(Footer, {
        style: {
          textAlign: 'center'
        }
      }, "\xA9 ", /*#__PURE__*/React__default['default'].createElement("slot", null, app.config('site.copyright')))));
    }
  }]);

  return App;
}(React__default['default'].Component);

function _createSuper$8(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$8(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$8() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var Dashboard = /*#__PURE__*/function (_React$Component) {
  _inherits(Dashboard, _React$Component);

  var _super = _createSuper$8(Dashboard);

  function Dashboard() {
    _classCallCheck(this, Dashboard);

    return _super.apply(this, arguments);
  }

  _createClass(Dashboard, [{
    key: "render",
    value: function render() {
      var _t = app.app.context._t;
      return /*#__PURE__*/React__default['default'].createElement(xadminUi.Page, {
        title: _t('Dashboard')
      }, /*#__PURE__*/React__default['default'].createElement("div", null, _t('Welcome, Have a nice day!')), app.Block('dashboard.main', this));
    }
  }]);

  return Dashboard;
}(React__default['default'].Component);

function _createSuper$7(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$7(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$7() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var Page = /*#__PURE__*/function (_React$Component) {
  _inherits(Page, _React$Component);

  var _super = _createSuper$7(Page);

  function Page() {
    _classCallCheck(this, Page);

    return _super.apply(this, arguments);
  }

  _createClass(Page, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          title = _this$props.title,
          subTitle = _this$props.subTitle,
          content = _this$props.content,
          breadcrumb = _this$props.breadcrumb,
          extra = _this$props.extra,
          actions = _this$props.actions,
          tabs = _this$props.tabs,
          footer = _this$props.footer,
          className = _this$props.className,
          style = _this$props.style,
          children = _this$props.children,
          pageProps = _objectWithoutProperties(_this$props, ["title", "subTitle", "content", "breadcrumb", "extra", "actions", "tabs", "footer", "className", "style", "children"]);

      return /*#__PURE__*/React__default['default'].createElement("div", {
        className: className,
        style: style
      }, /*#__PURE__*/React__default['default'].createElement(antd.PageHeader, _extends({
        title: title,
        subTitle: subTitle,
        extra: actions,
        tabs: tabs,
        breadcrumb: breadcrumb,
        footer: footer,
        style: {
          margin: 10
        }
      }, pageProps), content || extra ? /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, content && /*#__PURE__*/React__default['default'].createElement("div", {
        className: "content padding"
      }, content), extra && /*#__PURE__*/React__default['default'].createElement("div", {
        className: "extraContent"
      }, extra)) : null), /*#__PURE__*/React__default['default'].createElement("div", {
        style: {
          margin: 10
        }
      }, children));
    }
  }]);

  return Page;
}(React__default['default'].Component);

var Loading = (function (props) {
  return props.children ? /*#__PURE__*/React__default['default'].createElement(antd.Spin, props) : /*#__PURE__*/React__default['default'].createElement(antd.Card, {
    style: {
      width: '100%',
      textAlign: 'center'
    }
  }, /*#__PURE__*/React__default['default'].createElement(antd.Spin, props));
});

var Icon = function Icon(_ref) {
  var name = _ref.name,
      props = _objectWithoutProperties(_ref, ["name"]);

  return /*#__PURE__*/React__default['default'].createElement(icons.AlertOutlined, _extends({
    type: name
  }, props));
};

var MenuItem = function MenuItem(_ref) {
  var itemKey = _ref.itemKey,
      onItemClick = _ref.onItemClick,
      children = _ref.children,
      icon = _ref.icon;
      _ref.title;
      var props = _objectWithoutProperties(_ref, ["itemKey", "onItemClick", "children", "icon", "title"]);

  return /*#__PURE__*/React__default['default'].createElement(antd.Menu.Item, _extends({
    key: itemKey
  }, props, {
    onClick: function onClick(e) {
      props.onClick && props.onClick(e);
      onItemClick && onItemClick(e);
    }
  }), icon, " ", /*#__PURE__*/React__default['default'].createElement("span", {
    className: "nav-text"
  }, children));
};

var Text = (function (_ref) {
  var input = _ref.input,
      field = _ref.field;
  return /*#__PURE__*/React__default['default'].createElement(antd.Input, _extends({}, input, field.attrs));
});

var arrayLikeToArray = createCommonjsModule(function (module) {
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

unwrapExports(arrayLikeToArray);

var arrayWithoutHoles = createCommonjsModule(function (module) {
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}

module.exports = _arrayWithoutHoles;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

unwrapExports(arrayWithoutHoles);

var iterableToArray = createCommonjsModule(function (module) {
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

module.exports = _iterableToArray;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

unwrapExports(iterableToArray);

var unsupportedIterableToArray = createCommonjsModule(function (module) {
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

unwrapExports(unsupportedIterableToArray);

var nonIterableSpread = createCommonjsModule(function (module) {
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableSpread;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

unwrapExports(nonIterableSpread);

var toConsumableArray = createCommonjsModule(function (module) {
function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

var _toConsumableArray = unwrapExports(toConsumableArray);

function ownKeys$f(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$f(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$f(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$f(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var Option$1 = antd.Select.Option;
var Select = (function (_ref) {
  var input = _ref.input,
      label = _ref.label,
      field = _ref.field;
  return /*#__PURE__*/React__default['default'].createElement(antd.Select, _extends({
    style: _objectSpread$f({
      minWidth: field.width || 150
    }, field.style),
    allowClear: true,
    placeholder: label
  }, input), _toConsumableArray(field.titleMap).map(function (option) {
    return /*#__PURE__*/React__default['default'].createElement(Option$1, {
      key: option.value,
      value: option.value
    }, option.name);
  }));
});

var CheckboxComponent = function CheckboxComponent(_ref) {
  var input = _ref.input,
      label = _ref.label,
      field = _ref.field,
      meta = _ref.meta,
      FieldGroup = _ref.group;
  return /*#__PURE__*/React__default['default'].createElement(FieldGroup, {
    meta: meta,
    input: input,
    field: field,
    tailLayout: true
  }, /*#__PURE__*/React__default['default'].createElement(antd.Checkbox, _extends({
    checked: !!input.value
  }, input, field.attrs), label));
};

CheckboxComponent.useGroup = false;

antd.Radio.Group;

antd.Radio.Button;
antd.Radio.Group;

var TextArea = antd.Input.TextArea;
var Textarea = (function (_ref) {
  var input = _ref.input,
      field = _ref.field;
  return /*#__PURE__*/React__default['default'].createElement(TextArea, _extends({
    autosize: true,
    rows: 4
  }, input, field.attrs));
});

function ownKeys$e(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$e(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$e(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$e(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var RelateMultiTransfer = function RelateMultiTransfer(_ref) {
  var _ref$input = _ref.input,
      value = _ref$input.value,
      onChange = _ref$input.onChange,
      field = _ref.field;

  var _use = app.use('model.relate.select', {
    field: field
  }),
      loading = _use.loading,
      options = _use.options;

  var data = React__default['default'].useMemo(function () {
    return options.map(function (opt) {
      return _objectSpread$e({
        key: opt.value,
        title: opt.label
      }, opt);
    });
  }, [options]);

  var onSelectChange = function onSelectChange(targetKeys) {
    onChange(options.filter(function (opt) {
      return targetKeys.indexOf(opt.value) >= 0;
    }).map(function (opt) {
      return opt.item;
    }));
  };

  return loading ? /*#__PURE__*/React__default['default'].createElement(xadminUi.Loading, null) : /*#__PURE__*/React__default['default'].createElement(antd.Transfer, _extends({
    key: "transfer",
    dataSource: data,
    showSearch: true,
    listStyle: {
      width: 200,
      height: 300
    },
    titles: ['选择', '取消'],
    targetKeys: value ? value.map(function (item) {
      return item.id;
    }) : [],
    onChange: onSelectChange,
    render: function render(item) {
      return item.label;
    }
  }, field.attrs));
};

function _createSuper$6(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$6(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$6() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var DatePickerInput = /*#__PURE__*/function (_React$Component) {
  _inherits(DatePickerInput, _React$Component);

  var _super = _createSuper$6(DatePickerInput);

  function DatePickerInput() {
    var _this;

    _classCallCheck(this, DatePickerInput);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "onChange", function (value) {
      var input = _this.props.input;
      input.onChange(_this.getValue(value));
    });

    return _this;
  }

  _createClass(DatePickerInput, [{
    key: "getValue",
    value: function getValue(value) {
      var field = this.props.field;
      var format = field.datetimeFormat || 'YYYY-MM-DD';
      return value && value.format(format);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          input = _this$props.input,
          field = _this$props.field;
      var format = field.datetimeFormat || 'YYYY-MM-DD';
      return /*#__PURE__*/React__default['default'].createElement(antd.DatePicker, _extends({
        allowClear: true
      }, input, {
        onChange: this.onChange,
        value: input.value ? moment__default['default'](input.value) : null,
        format: format
      }));
    }
  }]);

  return DatePickerInput;
}(React__default['default'].Component);

var TimePicker = (function (_ref) {
  var _ref$input = _ref.input,
      onChange = _ref$input.onChange,
      value = _ref$input.value,
      inputProp = _objectWithoutProperties(_ref$input, ["onChange", "value"]),
      field = _ref.field;

  var format = field.timeFormat || 'HH:mm:ss';

  var onTimeChange = function onTimeChange(value) {
    onChange(value && value.format(format));
  };

  return /*#__PURE__*/React__default['default'].createElement(antd.TimePicker, _extends({
    allowClear: true,
    onChange: onTimeChange,
    value: value ? moment__default['default'](value, format) : null
  }, inputProp));
});

function _createSuper$5(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$5(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$5() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var DatetimePicker = /*#__PURE__*/function (_React$Component) {
  _inherits(DatetimePicker, _React$Component);

  var _super = _createSuper$5(DatetimePicker);

  function DatetimePicker() {
    var _this;

    _classCallCheck(this, DatetimePicker);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "onChange", function (value) {
      var _this$props = _this.props,
          input = _this$props.input,
          field = _this$props.field;
      var format = field.datetimeFormat || 'YYYY-MM-DD HH:mm:ss';
      input.onChange(value && value.format(format));
    });

    _defineProperty(_assertThisInitialized(_this), "onBlur", function (value) {
      var _this$props2 = _this.props,
          input = _this$props2.input,
          field = _this$props2.field;
      var format = field.datetimeFormat || 'YYYY-MM-DD HH:mm:ss';
      input.onChange(value && value.format(format));
    });

    return _this;
  }

  _createClass(DatetimePicker, [{
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          input = _this$props3.input,
          field = _this$props3.field;
      var format = field.datetimeFormat || 'YYYY-MM-DD HH:mm:ss';
      return /*#__PURE__*/React__default['default'].createElement(antd.DatePicker, {
        disabledDate: this.disabledStartDate,
        showTime: true,
        allowClear: true,
        format: format,
        value: input.value ? moment__default['default'](input.value) : null,
        onChange: this.onChange,
        onBlur: input.onBlur,
        style: {
          minWidth: 230
        }
      });
    }
  }]);

  return DatetimePicker;
}(React__default['default'].Component);

function ownKeys$d(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$d(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$d(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$d(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var defaultItemsRender = function defaultItemsRender(_ref) {
  var fields = _ref.fields,
      _ref$meta = _ref.meta,
      touched = _ref$meta.touched,
      error = _ref$meta.error,
      field = _ref.field,
      fieldsBuilder = _ref.fieldsBuilder;
  field.items;
      var label = field.label;
  return /*#__PURE__*/React__default['default'].createElement("div", null, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    onClick: function onClick() {
      return fields.push(null);
    }
  }, /*#__PURE__*/React__default['default'].createElement(icons.PlusOutlined, null)), fields.map(function (name, index) {
    var removeBtn = /*#__PURE__*/React__default['default'].createElement(antd.Button, {
      size: "small",
      onClick: function onClick(e) {
        fields.remove(index);
        e.persist();
      },
      style: {
        "float": 'right'
      }
    }, /*#__PURE__*/React__default['default'].createElement(icons.DeleteOutlined, null));
    var fieldsComponent = fieldsBuilder(name, index, removeBtn);
    return fieldsComponent.length > 1 ? /*#__PURE__*/React__default['default'].createElement(antd.Card, {
      key: "items".concat(index),
      size: "small",
      title: label + ' ' + (index + 1),
      extra: removeBtn,
      style: {
        width: '100%',
        marginTop: '0.5rem'
      }
    }, fieldsComponent) : fieldsComponent;
  }), touched && error ? error : null);
};

var ArrayWidget = (function (_ref2) {
  var input = _ref2.input,
      label = _ref2.label,
      meta = _ref2.meta,
      field = _ref2.field,
      option = _ref2.option,
      group = _ref2.group;
  var renderItems = field.itemsRender || defaultItemsRender;

  if (typeof renderItems === 'string') {
    renderItems = app__default['default'].load_dict('array_render')[renderItems];
  }

  var items = field.items;

  var fieldsBuilder = function fieldsBuilder(name, index, removeBtn, itemLable) {
    var itemLabel = itemLable || /*#__PURE__*/React__default['default'].createElement("div", null, removeBtn ? removeBtn : '');
    var itemFields = items.fields ? items.fields.map(function (f) {
      return xadminForm.prefixFieldKey(f, name + '.');
    }) : [_objectSpread$d(_objectSpread$d({}, items), {}, {
      key: name,
      name: name,
      label: itemLabel
    })];
    return xadminForm.objectBuilder(itemFields, items.render, option);
  };

  return /*#__PURE__*/React__default['default'].createElement(xadminForm.FieldArray, {
    name: field.name,
    label: label,
    meta: meta,
    input: input,
    component: renderItems,
    field: field,
    group: group,
    fieldsBuilder: fieldsBuilder
  });
});

function ownKeys$c(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$c(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$c(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$c(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var Fieldset = (function (_ref) {
  _ref.input;
      _ref.label;
      var _ref$meta = _ref.meta;
      _ref$meta.touched;
      _ref$meta.error;
      var field = _ref.field,
      group = _ref.group,
      option = _ref.option;
  return /*#__PURE__*/React__default['default'].createElement(antd.Card, {
    bodyStyle: {
      paddingBottom: 10
    },
    type: "inner"
  }, xadminForm.objectBuilder(field.fields, field.fieldsRender, _objectSpread$c(_objectSpread$c({}, option), {}, {
    group: group
  })));
});

function ownKeys$b(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$b(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$b(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$b(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var FieldGroup$1 = function FieldGroup(_ref) {
  var label = _ref.label,
      meta = _ref.meta,
      input = _ref.input,
      field = _ref.field,
      tailLayout = _ref.tailLayout,
      children = _ref.children;
  var attrs = field.attrs || {};
  var error = meta.touched && (meta.error || meta.submitError);
  var extra = field.description || field.help;
  var size = field.option && field.option.groupSize || attrs.groupSize || {
    labelCol: {
      xs: {
        span: 24
      },
      sm: {
        span: 5
      }
    },
    wrapperCol: {
      xs: {
        span: 24
      },
      sm: {
        span: 19,
        offset: tailLayout ? 5 : 0
      }
    }
  };

  var groupProps = _objectSpread$b(_objectSpread$b({
    extra: extra
  }, size), {}, {
    required: field.required
  });

  if (error) {
    groupProps['validateStatus'] = 'error';

    if (___default['default'].isString(error)) {
      groupProps['help'] = error;
    }
  }

  var controlComponent = children ? children : /*#__PURE__*/React__default['default'].createElement(antd.Input, _extends({}, input, attrs));
  return /*#__PURE__*/React__default['default'].createElement(antd.Form.Item, _extends({
    label: label
  }, groupProps), controlComponent, field.formText ? /*#__PURE__*/React__default['default'].createElement("span", {
    className: "ant-form-text"
  }, " ", field.formText) : null);
};

var InlineGroup = function InlineGroup(_ref3) {
  _ref3.label;
      var meta = _ref3.meta,
      input = _ref3.input,
      field = _ref3.field,
      children = _ref3.children;
  var attrs = field.attrs || {};
  var error = meta.touched && (meta.error || meta.submitError);
  var extra = field.description || field.help;
  var groupProps = {
    extra: extra,
    required: field.required
  };

  if (error) {
    groupProps['validateStatus'] = 'error';
    groupProps['help'] = error;
  }

  var controlComponent = children ? children : /*#__PURE__*/React__default['default'].createElement(antd.Input, _extends({}, input, attrs));
  return /*#__PURE__*/React__default['default'].createElement(antd.Form.Item, groupProps, /*#__PURE__*/React__default['default'].cloneElement(controlComponent, {
    inline: true
  }), field.formText ? /*#__PURE__*/React__default['default'].createElement("span", {
    className: "ant-form-text"
  }, " ", field.formText) : null);
};

var SimpleGroup = function SimpleGroup(_ref4) {
  var label = _ref4.label,
      meta = _ref4.meta,
      input = _ref4.input,
      field = _ref4.field,
      children = _ref4.children;
  var attrs = field.attrs || {};
  var error = meta.touched && (meta.error || meta.submitError);
  var extra = field.description || field.help;
  var groupProps = {
    extra: extra,
    required: field.required
  };

  if (error) {
    groupProps['validateStatus'] = 'error';
    groupProps['help'] = error;
  }

  var controlComponent = children ? children : /*#__PURE__*/React__default['default'].createElement(antd.Input, _extends({}, input, attrs));
  return /*#__PURE__*/React__default['default'].createElement(antd.Form.Item, _extends({
    label: label
  }, groupProps), controlComponent, field.formText ? /*#__PURE__*/React__default['default'].createElement("span", {
    className: "ant-form-text"
  }, " ", field.formText) : null);
};

var ColGroup = function ColGroup(_ref5) {
  var label = _ref5.label,
      meta = _ref5.meta,
      input = _ref5.input,
      field = _ref5.field,
      children = _ref5.children;
  var attrs = field.attrs || {};
  var error = meta.touched && (meta.error || meta.submitError);
  var extra = field.description || field.help;
  var size = field.option && field.option.groupSize || attrs.groupSize || {
    labelCol: {
      xs: {
        span: 24
      },
      sm: {
        span: 8
      }
    },
    wrapperCol: {
      xs: {
        span: 24
      },
      sm: {
        span: 16
      }
    }
  };

  var groupProps = _objectSpread$b(_objectSpread$b({
    extra: extra
  }, size), {}, {
    required: field.required
  });

  if (error) {
    groupProps['validateStatus'] = 'error';
    groupProps['help'] = error;
  }

  var controlComponent = children ? children : /*#__PURE__*/React__default['default'].createElement(antd.Input, _extends({}, input, attrs));
  return /*#__PURE__*/React__default['default'].createElement(antd.Col, {
    span: 8,
    xs: 24,
    sm: 12,
    md: 12,
    lg: 8,
    xl: 8,
    xxl: 6
  }, /*#__PURE__*/React__default['default'].createElement(antd.Form.Item, _extends({
    label: label
  }, groupProps), controlComponent, field.formText ? /*#__PURE__*/React__default['default'].createElement("span", {
    className: "ant-form-text"
  }, field.formText) : null));
};

var FormLayout = function FormLayout(props) {
  var children = props.children,
      invalid = props.invalid,
      handleSubmit = props.handleSubmit,
      submitting = props.submitting;
  var _t = app__default['default'].context._t;
  var groupProps = {
    wrapperCol: {
      xs: {
        span: 24,
        offset: 0
      },
      sm: {
        span: 18,
        offset: 5
      }
    }
  };
  return /*#__PURE__*/React__default['default'].createElement(antd.Card, null, /*#__PURE__*/React__default['default'].createElement("form", {
    onSubmit: handleSubmit
  }, children, /*#__PURE__*/React__default['default'].createElement(antd.Form.Item, groupProps, /*#__PURE__*/React__default['default'].createElement(antd.Space, null, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    type: "primary",
    htmlType: "submit",
    loading: submitting,
    disabled: invalid
  }, _t('Save')), /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    onClick: function onClick() {
      return history.back();
    }
  }, _t('Cancel'))))));
};

var ModalLayout = function ModalLayout(_ref) {
  var children = _ref.children,
      invalid = _ref.invalid,
      handleSubmit = _ref.handleSubmit,
      submitting = _ref.submitting,
      title = _ref.title,
      show = _ref.show,
      onClose = _ref.onClose,
      saveText = _ref.saveText;
  var _t = app__default['default'].context._t;
  return /*#__PURE__*/React__default['default'].createElement(antd.Modal, {
    visible: show,
    onClose: onClose,
    style: {
      maxWidth: 700
    },
    width: "95%",
    title: title,
    okText: saveText || _t('Save'),
    onOk: handleSubmit,
    okButtonProps: {
      disabled: invalid,
      loading: submitting
    },
    cancelText: _t('Cancel'),
    onCancel: onClose
  }, /*#__PURE__*/React__default['default'].createElement(antd.Form, {
    onSubmit: handleSubmit
  }, children));
};

var form = {
  components: {
    'Form.Layout': FormLayout,
    'Form.ModalLayout': ModalLayout,
    'Form.FieldGroup': FieldGroup$1,
    'Form.InlineGroup': InlineGroup,
    'Form.SimpleGroup': SimpleGroup,
    'Form.ColGroup': ColGroup
  },
  form_fields: {
    text: {
      component: Text,
      parse: function parse(value) {
        return value === '' ? null : value;
      }
    },
    textarea: {
      component: Textarea,
      parse: function parse(value) {
        return value === '' ? null : value;
      }
    },
    number: {
      component: Text,
      parse: function parse(value) {
        return value === '' || value == null ? null : parseFloat(value);
      },
      attrs: {
        type: 'number',
        style: {
          maxWidth: 200
        }
      }
    },
    integer: {
      component: Text,
      parse: function parse(value) {
        return value === '' || value == null ? null : parseFloat(value);
      },
      attrs: {
        type: 'number',
        style: {
          maxWidth: 200
        }
      }
    },
    select: {
      component: Select,
      parse: function parse(value) {
        return value;
      }
    },
    numselect: {
      component: Select,
      parse: function parse(value) {
        return value === '' || value == null ? null : parseFloat(value);
      }
    },
    date: {
      component: DatePickerInput
    },
    datetime: {
      component: DatetimePicker
    },
    time: {
      component: TimePicker
    },
    bool: {
      component: CheckboxComponent,
      normalize: function normalize(value, previousValue) {
        return Boolean(value);
      }
    },
    checkbox: {
      component: CheckboxComponent
    },
    transfer: {
      component: RelateMultiTransfer
    },
    fieldset: {
      component: Fieldset
    },
    array: {
      component: ArrayWidget
    }
  }
};

var Content = antd.Layout.Content,
    Sider = antd.Layout.Sider;

var DefaultAddButton = function DefaultAddButton(_ref) {
  var onAdd = _ref.onAdd,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    type: "primary",
    onClick: onAdd
  }, children);
};

var ModelListPage = function ModelListPage() {
  var _use = app.use('model'),
      model = _use.model;

  var _use2 = app.use('model.permission'),
      canAdd = _use2.canAdd;

  var _use3 = app.use('model.event'),
      onAdd = _use3.onAdd;

  var query = app.use('searchParams');
  var ItemsComponent = model.components && model.components.DataList || xadminUi.C('Model.DataTable');
  var icon = model.icon || model.name;

  if (___default['default'].isString(icon)) {
    icon = /*#__PURE__*/React__default['default'].createElement(xadminUi.Icon, {
      name: icon
    });
  }

  var title = model.title;

  var renderActions = function renderActions() {
    var AddButton = model.components && model.components.AddButton || xadminUi.C('Model.AddButton') || DefaultAddButton;
    return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
      name: "model.list.navbtn"
    }), canAdd ? /*#__PURE__*/React__default['default'].createElement(AddButton, {
      onAdd: onAdd
    }, /*#__PURE__*/React__default['default'].createElement(xadminUi.Icon, {
      name: "plus"
    }), " ", xadminI18n._t('Add {{object}}', {
      object: model.title
    })) : null);
  };

  var GridComponents = [/*#__PURE__*/React__default['default'].createElement("div", {
    key: "model-list-subnav",
    style: {
      display: 'flex',
      justifyContent: 'space-between',
      marginBottom: '.5rem'
    }
  }, /*#__PURE__*/React__default['default'].createElement(xadminUi.C, {
    is: "Model.Pagination"
  }), /*#__PURE__*/React__default['default'].createElement(xadminUi.C, {
    is: "Model.ListSubMenu"
  })), /*#__PURE__*/React__default['default'].createElement(ItemsComponent, {
    key: "model-list-grid",
    query: query
  }), /*#__PURE__*/React__default['default'].createElement("div", {
    key: "model-list-downnav",
    style: {
      display: 'flex',
      justifyContent: 'space-between',
      marginTop: '.5rem'
    }
  }, /*#__PURE__*/React__default['default'].createElement(xadminUi.C, {
    is: "Model.ActionBar"
  }), /*#__PURE__*/React__default['default'].createElement(xadminUi.C, {
    is: "Model.Pagination"
  }))];
  return /*#__PURE__*/React__default['default'].createElement(xadminUi.Page, {
    className: "xadmin-model-list-".concat(model.key),
    title: /*#__PURE__*/React__default['default'].createElement("span", null, icon, " ", title),
    subTitle: /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
      name: "model.list.nav"
    }),
    actions: renderActions()
  }, /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
    name: "model.list.submenu"
  }), /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
    name: "model.list.sidemenu"
  }, function (sideMenu) {
    return /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
      name: "model.list.sidepanel"
    }, function (sidePanel) {
      return sideMenu || sidePanel ? /*#__PURE__*/React__default['default'].createElement(antd.Layout, null, sideMenu ? /*#__PURE__*/React__default['default'].createElement(Sider, {
        width: 200,
        style: {
          backgroundColor: 'transparent',
          marginRight: '.5rem'
        }
      }, sideMenu) : null, /*#__PURE__*/React__default['default'].createElement(Content, null, GridComponents), sidePanel ? /*#__PURE__*/React__default['default'].createElement(Sider, {
        width: 200,
        style: {
          backgroundColor: 'transparent',
          marginLeft: '.5rem'
        }
      }, sidePanel) : null) : GridComponents;
    });
  }));
};

var ModelFormPage = function ModelFormPage() {
  var _use4 = app.use('model'),
      model = _use4.model;

  var _use5 = app.use('params'),
      id = _use5.id;

  var _use6 = app.use('model.event'),
      onSaved = _use6.onSaved;

  var _use7 = app.use('model.item', {
    id: id
  }),
      data = _use7.data,
      loading = _use7.loading;

  var query = app.use('query');
  var title = id ? xadminI18n._t('Edit {{title}}', {
    title: model.title + ' ' + (data && data[model.displayField || 'name'] || '')
  }) : xadminI18n._t('Create {{title}}', {
    title: model.title
  });
  var FormComponent = model.components && model.components.DataForm || xadminUi.C('Model.DataForm');
  return /*#__PURE__*/React__default['default'].createElement(xadminUi.Page, {
    className: "xadmin-model-form-".concat(model.key),
    title: title,
    onBack: function onBack() {
      return history.back();
    },
    subTitle: /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
      name: "model.edit.nav"
    }),
    actions: /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
      name: "model.edit.navbtn"
    })
  }, /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
    name: "model.form.before"
  }), loading ? /*#__PURE__*/React__default['default'].createElement(xadminUi.Loading, null) : /*#__PURE__*/React__default['default'].createElement(FormComponent, {
    id: id,
    item: data,
    query: query,
    onSubmitSuccess: onSaved
  }), /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
    name: "model.form.after"
  }));
};

var ModelDetailPage = function ModelDetailPage() {
  var _use8 = app.use('model'),
      model = _use8.model;

  var _use9 = app.use('params'),
      id = _use9.id;

  var renderActions = function renderActions() {
    var _use10 = app.use('model.permission'),
        canEdit = _use10.canEdit;

    var _use11 = app.use('model.event'),
        onEdit = _use11.onEdit;

    return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
      name: "model.detail.navbtn"
    }), canEdit ? /*#__PURE__*/React__default['default'].createElement(antd.Button, {
      type: "primary",
      onClick: function onClick() {
        return onEdit(id);
      }
    }, /*#__PURE__*/React__default['default'].createElement(xadminUi.Icon, {
      name: "edit"
    }), " ", xadminI18n._t('Edit')) : null);
  };

  var DetailComponent = model.components && model.components.DataDetail || xadminUi.C('Model.DataDetail');
  return /*#__PURE__*/React__default['default'].createElement(xadminUi.Page, {
    className: "xadmin-model-detail-".concat(model.key),
    title: model.title,
    onBack: function onBack() {
      return history.back();
    },
    subTitle: /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
      name: "model.detail.nav"
    }),
    actions: renderActions()
  }, /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
    name: "model.detail.before"
  }), /*#__PURE__*/React__default['default'].createElement(DetailComponent, {
    id: id
  }), /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
    name: "model.detail.after"
  }));
};

var Pagination = (function (props) {
  var emptyComponent = props.emptyComponent;
      props.maxButtons;
      var pagerProps = _objectWithoutProperties(props, ["emptyComponent", "maxButtons"]);

  var _use = app.use('model.pagination'),
      items = _use.items,
      activePage = _use.activePage,
      changePage = _use.changePage;

  if (items > 1 || emptyComponent == undefined) {
    return /*#__PURE__*/React__default['default'].createElement(antd.Pagination, _extends({
      showQuickJumper: items > 10,
      showSizeChanger: false,
      current: activePage,
      size: props.size == 'sm' ? 'small' : '',
      className: props.className,
      pageSize: 1,
      total: items,
      onChange: changePage
    }, pagerProps));
  } else {
    return emptyComponent !== undefined ? emptyComponent : /*#__PURE__*/React__default['default'].createElement(antd.Button, null, xadminI18n._t('No paging'));
  }
});

var arrayWithHoles = createCommonjsModule(function (module) {
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

unwrapExports(arrayWithHoles);

var iterableToArrayLimit = createCommonjsModule(function (module) {
function _iterableToArrayLimit(arr, i) {
  var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

unwrapExports(iterableToArrayLimit);

var nonIterableRest = createCommonjsModule(function (module) {
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableRest;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

unwrapExports(nonIterableRest);

var slicedToArray = createCommonjsModule(function (module) {
function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;
module.exports["default"] = module.exports, module.exports.__esModule = true;
});

var _slicedToArray = unwrapExports(slicedToArray);

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var CountButton = function CountButton() {
  var _use = app.use('model.count'),
      count = _use.count;

  return /*#__PURE__*/React__default['default'].createElement(antd.Button, null, xadminI18n._t('{{count}} records', {
    count: count
  }));
};

var PageSizeButton = function PageSizeButton() {
  var _use2 = app.use('model.pagesize'),
      size = _use2.size,
      sizes = _use2.sizes,
      setPageSize = _use2.setPageSize;

  var _React$useState = React__default['default'].useState(false),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      visible = _React$useState2[0],
      setVisible = _React$useState2[1];

  var _React$useState3 = React__default['default'].useState(''),
      _React$useState4 = _slicedToArray(_React$useState3, 2),
      inputSize = _React$useState4[0],
      setInputSize = _React$useState4[1];

  var onSetPageSize = function onSetPageSize(size) {
    setPageSize(size);
    setVisible(false);
  };

  var onInputSize = function onInputSize(e) {
    if (e.key == 'Enter') {
      var _size = parseInt(inputSize);

      onSetPageSize(_size);
      setInputSize('');
    }

    e.persist();
  };

  return /*#__PURE__*/React__default['default'].createElement(antd.Dropdown, {
    key: "page-size-dropdown",
    onVisibleChange: setVisible,
    visible: visible,
    overlay: /*#__PURE__*/React__default['default'].createElement(antd.Menu, null, sizes.map(function (size) {
      return /*#__PURE__*/React__default['default'].createElement(antd.Menu.Item, {
        key: "size-".concat(size),
        onClick: function onClick() {
          return setPageSize(size);
        },
        eventKey: "size-".concat(size)
      }, xadminI18n._t('Set {{size}} per page', {
        size: size
      }));
    }), /*#__PURE__*/React__default['default'].createElement(antd.Menu.Item, {
      key: "size-custom"
    }, /*#__PURE__*/React__default['default'].createElement(antd.Input, {
      placeholder: xadminI18n._t('Customize page size'),
      value: inputSize,
      onChange: function onChange(e) {
        return setInputSize(e.target.value);
      },
      precision: 0,
      onKeyPress: onInputSize,
      style: {
        width: 100
      }
    })))
  }, /*#__PURE__*/React__default['default'].createElement(antd.Button, null, xadminI18n._t('{{size}} per page', {
    size: size
  })));
};

var ColsDropdown = function ColsDropdown() {
  var _use3 = app.use('model.fields'),
      selected = _use3.selected,
      fields = _use3.fields,
      changeFieldDisplay = _use3.changeFieldDisplay;

  var items = [];
  var showFields = Object.keys(fields).filter(function (name) {
    return fields[name].showInList !== false;
  });
  var menuShow = showFields.length <= 10;

  var _iterator = _createForOfIteratorHelper(showFields),
      _step;

  try {
    var _loop = function _loop() {
      var name = _step.value;

      var field = fields[name],
          fieldName = name,
          title = field.title || name,
          fieldSelected = ___default['default'].indexOf(selected, name) !== -1,
          onClick = function onClick(e) {
        changeFieldDisplay([fieldName, e.target.checked]);
      },
          onClickBtn = function onClickBtn() {
        changeFieldDisplay([fieldName, !fieldSelected]);
      };

      if (menuShow) {
        items.push( /*#__PURE__*/React__default['default'].createElement(antd.Checkbox, {
          key: name,
          onChange: onClick,
          checked: fieldSelected
        }, title));
      } else {
        items.push( /*#__PURE__*/React__default['default'].createElement(antd.Col, {
          span: 3,
          key: name,
          style: {
            margin: '5px 0'
          }
        }, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
          type: fieldSelected ? 'primary' : 'default',
          block: true,
          onClick: onClickBtn
        }, title)));
      }
    };

    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      _loop();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return /*#__PURE__*/React__default['default'].createElement(antd.Popover, {
    placement: "bottomRight",
    overlayStyle: {
      maxWidth: '80%'
    },
    content: menuShow ? items : /*#__PURE__*/React__default['default'].createElement(antd.Row, {
      gutter: 12
    }, items),
    trigger: "click"
  }, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    type: "text"
  }, /*#__PURE__*/React__default['default'].createElement(icons.SettingOutlined, null)));
};

var SubMenu = (function (_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement(antd.Space, null, /*#__PURE__*/React__default['default'].createElement(CountButton, null), /*#__PURE__*/React__default['default'].createElement(PageSizeButton, null), /*#__PURE__*/React__default['default'].createElement(xadminModel.ModelBlock, {
    name: "model.list.submenu.btngroup"
  }), /*#__PURE__*/React__default['default'].createElement(ColsDropdown, null), children);
});

function ownKeys$a(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$a(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$a(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$a(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var getFieldProp = xadminModel.utils.getFieldProp;

var ItemEditFormLayout = function ItemEditFormLayout(props) {
  var children = props.children,
      pristine = props.pristine,
      invalid = props.invalid,
      handleSubmit = props.handleSubmit,
      submitting = props.submitting;
  return /*#__PURE__*/React__default['default'].createElement("form", {
    onSubmit: handleSubmit
  }, children, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    style: {
      marginTop: '-1rem'
    },
    block: true,
    htmlType: "submit",
    loading: submitting,
    disabled: pristine || invalid,
    size: "small"
  }, xadminI18n._t('Change')));
};

var ItemEditForm = function ItemEditForm(props) {
  var item = props.item,
      field = props.field,
      value = props.value,
      schema = props.schema,
      onClose = props.onClose;

  var _use = app.use('model'),
      model = _use.model;

  var _use2 = app.use('model.save', props),
      saveItem = _use2.saveItem;

  var getSchema = function getSchema() {
    var formField = ___default['default'].find(model.form || [], function (obj) {
      return obj && obj.key == field;
    }) || {
      key: field
    };
    var required = (model.required || []).indexOf(field) >= 0 ? {
      required: ['value']
    } : {};
    return _objectSpread$a({
      type: 'object',
      properties: {
        value: schema
      },
      form: [_objectSpread$a(_objectSpread$a({}, formField), {}, {
        key: 'value'
      })]
    }, required);
  };

  var _React$useState = React__default['default'].useState(getSchema),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      formSchema = _React$useState2[0],
      setFormSchema = _React$useState2[1];

  React__default['default'].useEffect(function () {
    setFormSchema(getSchema());
  }, [model, field, schema]);
  return /*#__PURE__*/React__default['default'].createElement(xadminForm.SchemaForm, {
    initialValues: {
      id: item['id'],
      value: value
    },
    schema: formSchema,
    option: {
      group: xadminUi.C('Form.InlineGroup')
    },
    onSubmit: function onSubmit(values) {
      return saveItem(_defineProperty({
        id: values.id
      }, field, values.value), true);
    },
    onSubmitSuccess: function onSubmitSuccess() {
      return onClose();
    },
    component: ItemEditFormLayout
  });
};

var Item = function Item(props) {
  var item = props.item,
      field = props.field,
      wrap = props.wrap,
      itemProps = _objectWithoutProperties(props, ["item", "field", "wrap"]);

  var _use3 = app.use('model.list.item', props),
      value = _use3.value,
      schema = _use3.schema,
      componentClass = _use3.componentClass,
      editable = _use3.editable;

  var RawWrapComponent = wrap || 'span';
  var WrapComponent = editable ? RawWrapComponent : function (_ref) {
    var children = _ref.children,
        props = _objectWithoutProperties(_ref, ["children"]);

    var _React$useState3 = React__default['default'].useState(false),
        _React$useState4 = _slicedToArray(_React$useState3, 2),
        edit = _React$useState4[0],
        setEdit = _React$useState4[1];

    return /*#__PURE__*/React__default['default'].createElement(antd.Popover, {
      content: /*#__PURE__*/React__default['default'].createElement(xadminUi.C, {
        is: "Model.ItemEditForm",
        item: item,
        field: field,
        value: value,
        schema: schema,
        onClose: function onClose() {
          return setEdit(false);
        }
      }),
      trigger: "click",
      onVisibleChange: setEdit,
      visible: edit,
      placement: "right"
    }, /*#__PURE__*/React__default['default'].createElement(RawWrapComponent, _extends({}, props, {
      style: {
        cursor: 'pointer'
      }
    }), children, " ", /*#__PURE__*/React__default['default'].createElement(icons.EditOutlined, null)));
  };

  if (item == undefined || item == null) {
    return /*#__PURE__*/React__default['default'].createElement(WrapComponent, null, /*#__PURE__*/React__default['default'].createElement("span", {
      className: "text-muted"
    }, xadminI18n._t('Null')));
  }

  if (componentClass) {
    var ItemComponent = componentClass;
    return /*#__PURE__*/React__default['default'].createElement(ItemComponent, _extends({
      item: item,
      value: value,
      field: field,
      schema: schema,
      wrap: WrapComponent
    }, itemProps));
  } else {
    return /*#__PURE__*/React__default['default'].createElement(WrapComponent, null, value == undefined || value == null ? /*#__PURE__*/React__default['default'].createElement("span", {
      className: "text-muted"
    }, xadminI18n._t('Null')) : value);
  }
};

var Header = function Header(props) {
  var showText = props.showText,
      field = props.field;

  var _use4 = app.use('model.list.header', {
    field: field
  }),
      title = _use4.title;

  var _use5 = app.use('model.list.order', {
    field: field
  }),
      order = _use5.order,
      canOrder = _use5.canOrder,
      changeOrder = _use5.changeOrder;

  var renderOrder = function renderOrder() {
    var orderItems = [];

    if (canOrder) {
      orderItems = [/*#__PURE__*/React__default['default'].createElement(antd.Menu.Item, {
        onClick: function onClick(e) {
          changeOrder('ASC');
        },
        key: "ASC"
      }, /*#__PURE__*/React__default['default'].createElement(icons.CaretUpOutlined, null), " ", xadminI18n._t('Sort ASC')), /*#__PURE__*/React__default['default'].createElement(antd.Menu.Item, {
        onClick: function onClick(e) {
          changeOrder('DESC');
        },
        key: "DESC"
      }, /*#__PURE__*/React__default['default'].createElement(icons.CaretDownOutlined, null), " ", xadminI18n._t('Sort DESC'))];

      if (order != '') {
        orderItems.push( /*#__PURE__*/React__default['default'].createElement(antd.Menu.Item, {
          onClick: function onClick(e) {
            changeOrder('');
          }
        }, /*#__PURE__*/React__default['default'].createElement(icons.CloseOutlined, null), " ", xadminI18n._t('Clear order')));
      }
    }

    return orderItems;
  };

  var icon = {
    'ASC': /*#__PURE__*/React__default['default'].createElement(icons.CaretUpOutlined, null),
    'DESC': /*#__PURE__*/React__default['default'].createElement(icons.CaretDownOutlined, null)
  }[order] || '';
  var items = [].concat(_toConsumableArray(renderOrder()), _toConsumableArray(app.Block('model.list.header.menu') || []));
  return items.filter(function (item) {
    return !___default['default'].isNil(item);
  }).length > 0 ? /*#__PURE__*/React__default['default'].createElement(antd.Dropdown, {
    overlay: /*#__PURE__*/React__default['default'].createElement(antd.Menu, {
      selectedKeys: [order]
    }, React__default['default'].Children.toArray(items)),
    trigger: ['click']
  }, /*#__PURE__*/React__default['default'].createElement("a", {
    style: {
      cursor: 'pointer'
    }
  }, title, " ", icon)) : showText === false ? null : /*#__PURE__*/React__default['default'].createElement("span", null, title, " ", icon);
};

var useActions = function useActions(props) {
  var _use6 = app.use('model.actions'),
      renderActions = _use6.renderActions;

  return /*#__PURE__*/React__default['default'].createElement(antd.Button.Group, {
    size: "small",
    className: "model-list-action"
  }, renderActions(props));
};

var useList = function useList(render) {
  return function (props) {
    var state = _objectSpread$a(_objectSpread$a(_objectSpread$a({}, props), app.use('model.list')), app.use('model'));

    var loading = state.loading,
        items = state.items,
        model = state.model;
    var list = render(state);

    if (loading) {
      return /*#__PURE__*/React__default['default'].createElement(xadminUi.Loading, null, items.length > 0 ? list : null);
    } else {
      if (items.length > 0) {
        return list;
      } else {
        var EmptyComponent = model.components && model.components.DataEmpty;

        if (EmptyComponent) {
          return /*#__PURE__*/React__default['default'].createElement(EmptyComponent, null);
        } else {
          return /*#__PURE__*/React__default['default'].createElement(antd.Card, null, /*#__PURE__*/React__default['default'].createElement(antd.Empty, {
            style: {
              marginBottom: '.5rem'
            },
            description: xadminI18n._t('No Data')
          }));
        }
      }
    }
  };
};

var DataTableActionRender = function DataTableActionRender(props) {
  return /*#__PURE__*/React__default['default'].createElement("div", {
    style: {
      width: '100%',
      textAlign: 'center'
    }
  }, useActions(_objectSpread$a(_objectSpread$a({}, props), app.use('model.list.row', {
    id: props.id
  }))));
};

var DataTable = useList(function (_ref2) {
  var model = _ref2.model,
      items = _ref2.items,
      fields = _ref2.fields,
      size = _ref2.size,
      onRow = _ref2.onRow;

  var _use7 = app.use('model.select'),
      selected = _use7.selected,
      onSelect = _use7.onSelect,
      onSelectAll = _use7.onSelectAll;

  var _use8 = app.use('model.actions'),
      actions = _use8.actions;

  var _use9 = app.use('model.batchActions'),
      batchActions = _use9.actions;

  var lockedFields = model.lockedFields || [];
  var columns = [];
  fields.forEach(function (fieldName) {
    var field = getFieldProp(model, fieldName);
    if (!field) return;

    var column = _objectSpread$a({
      field: field,
      width: field.width || undefined,
      fixed: lockedFields.indexOf(fieldName) >= 0,
      title: /*#__PURE__*/React__default['default'].createElement(Header, {
        key: "model-list-header-".concat(fieldName),
        field: fieldName
      }),
      key: fieldName,
      dataIndex: fieldName,
      render: function render(value, item) {
        return /*#__PURE__*/React__default['default'].createElement(xadminUi.C, {
          is: "Model.DataItem",
          item: item,
          field: fieldName,
          inList: true
        });
      }
    }, field.column);

    if (field.level2) {
      if (columns.length > 0 && columns[columns.length - 1].children !== undefined && columns[columns.length - 1].title == field.level2) {
        columns[columns.length - 1].children.push(column);
      } else {
        columns.push({
          title: field.level2,
          children: [column]
        });
      }
    } else {
      columns.push(column);
    }
  });
  if (actions && actions.length > 0) columns.push({
    title: '',
    key: '__action__',
    fixed: 'right',
    render: function render(val, item) {
      return /*#__PURE__*/React__default['default'].createElement(DataTableActionRender, {
        key: item.id,
        fields: fields,
        id: item.id
      });
    }
  });
  var rowSelection = batchActions && batchActions.length > 0 ? {
    selectedRowKeys: selected.map(function (r) {
      return r.id;
    }),
    onSelect: onSelect,
    onSelectAll: onSelectAll
  } : undefined;
  var tableProps = model.dataTableProps ? typeof model.dataTableProps == 'function' ? model.dataTableProps(columns, items) : model.dataTableProps : {};
  return /*#__PURE__*/React__default['default'].createElement(antd.Table, _extends({
    columns: columns,
    dataSource: items,
    bordered: true,
    size: size,
    rowSelection: rowSelection,
    pagination: false,
    onRow: onRow,
    rowKey: "id" //scroll={{ x: 700 }}

  }, tableProps));
});

var DataListRender = function DataListRender(props) {
  var id = props.id,
      fields = props.fields;

  var _use10 = app.use('model.list.row', {
    id: id
  }),
      item = _use10.item,
      selected = _use10.selected;

  var Item = xadminUi.C('Model.DataItem');
  return /*#__PURE__*/React__default['default'].createElement(antd.List.Item, {
    actions: [useActions(props)]
  }, /*#__PURE__*/React__default['default'].createElement(antd.List.Item.Meta, {
    title: /*#__PURE__*/React__default['default'].createElement(Item, {
      item: item,
      field: fields[0],
      value: item[fields[0]],
      selected: selected
    }),
    description: /*#__PURE__*/React__default['default'].createElement(Item, {
      item: item,
      field: fields[1],
      value: item[fields[1]],
      selected: selected
    })
  }), React__default['default'].Children.toArray(fields.slice(2).map(function (field) {
    return /*#__PURE__*/React__default['default'].createElement(Item, {
      item: item,
      field: field,
      value: item[field],
      selected: selected,
      inList: true,
      wrap: function wrap(_ref3) {
        var children = _ref3.children,
            props = _objectWithoutProperties(_ref3, ["children"]);

        return /*#__PURE__*/React__default['default'].createElement("div", _extends({
          key: "item-".concat(item.id, "-").concat(field)
        }, props), children);
      }
    });
  })));
};

var DataList = useList(function (_ref4) {
  var model = _ref4.model,
      items = _ref4.items,
      fields = _ref4.fields,
      size = _ref4.size;
  var RenderItem = model.components && model.components.DataListRender || xadminUi.C('Model.DataListRender') || DataListRender;
  return /*#__PURE__*/React__default['default'].createElement(antd.Card, null, /*#__PURE__*/React__default['default'].createElement(antd.List, _extends({
    itemLayout: "vertical",
    dataSource: items,
    size: size,
    renderItem: function renderItem(item) {
      return /*#__PURE__*/React__default['default'].createElement(RenderItem, {
        key: item.id,
        fields: fields,
        id: item.id
      });
    }
  }, model.dataListProps)));
});

var ActionEdit = function ActionEdit(props) {
  var _use11 = app.use('model.permission'),
      canEdit = _use11.canEdit;

  var _use12 = app.use('model.event'),
      onEdit = _use12.onEdit;

  if (canEdit) {
    return /*#__PURE__*/React__default['default'].createElement(antd.Tooltip, {
      placement: "top",
      title: xadminI18n._t('Edit')
    }, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
      key: "action-edit",
      size: "small",
      className: "model-list-action",
      onClick: function onClick() {
        return onEdit(props.id);
      }
    }, /*#__PURE__*/React__default['default'].createElement(icons.EditOutlined, null)));
  }

  return null;
};

var ActionDelete = function ActionDelete(props) {
  var _use13 = app.use('model.permission'),
      canDelete = _use13.canDelete;

  var _use14 = app.use('model.delete'),
      deleteItem = _use14.deleteItem;

  if (canDelete) {
    return /*#__PURE__*/React__default['default'].createElement(antd.Popconfirm, {
      key: "action-delete",
      title: xadminI18n._t('Comfirm Delete') + '?',
      onConfirm: function onConfirm() {
        return deleteItem();
      },
      okText: xadminI18n._t('Delete'),
      cancelText: xadminI18n._t('Cancel')
    }, /*#__PURE__*/React__default['default'].createElement(antd.Tooltip, {
      placement: "top",
      title: xadminI18n._t('Delete')
    }, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
      key: "action-delete",
      size: "small",
      className: "model-list-action",
      type: "danger"
    }, /*#__PURE__*/React__default['default'].createElement(icons.DeleteOutlined, null))));
  }

  return null;
};

var ModelForm = function ModelForm(props) {
  props.title;
      var schema = props.schema,
      formProps = _objectWithoutProperties(props, ["title", "schema"]);

  var _use = app.use('model'),
      model = _use.model;

  var _use2 = app.use('model.item', props),
      data = _use2.data,
      loading = _use2.loading,
      saveItem = _use2.saveItem;

  return loading ? /*#__PURE__*/React__default['default'].createElement(xadminUi.Loading, null) : /*#__PURE__*/React__default['default'].createElement(xadminForm.SchemaForm, _extends({
    formKey: "model.".concat(model.key),
    schema: schema || model,
    initialValues: data,
    onSubmit: function onSubmit(item) {
      return saveItem(item);
    }
  }, formProps, model.formProps));
};

function ownKeys$9(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$9(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$9(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$9(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var FieldGroup = function FieldGroup(_ref) {
  var label = _ref.label,
      field = _ref.field,
      children = _ref.children;
  var attrs = field.attrs || {};
  var extra = field.description || field.help;
  var size = field.option && field.option.groupSize || attrs.groupSize || {
    labelCol: {
      xs: {
        span: 24
      },
      sm: {
        span: 5
      }
    },
    wrapperCol: {
      xs: {
        span: 24
      },
      sm: {
        span: 18
      }
    }
  };

  var groupProps = _objectSpread$9(_objectSpread$9({
    extra: extra
  }, size), {}, {
    required: field.required
  });

  return /*#__PURE__*/React__default['default'].createElement(antd.Form.Item, _extends({
    label: label
  }, groupProps), children);
};

var ModelInfo = function ModelInfo(_ref2) {
  var data = _ref2.data;
      _ref2.title;
      _ref2.schema;
      var model = _ref2.model,
      loading = _ref2.loading;
      _ref2.saveItem;
      var formProps = _objectWithoutProperties(_ref2, ["data", "title", "schema", "model", "loading", "saveItem"]);

  var renderFields = function renderFields() {
    return xadminForm.schemaConvert(model).fields.map(function (field) {
      field.option = _objectSpread$9(_objectSpread$9({}, field.option), formProps);
      return /*#__PURE__*/React__default['default'].createElement(FieldGroup, {
        key: field.key,
        label: field.label,
        field: field
      }, /*#__PURE__*/React__default['default'].createElement(Item, {
        item: data,
        field: field.key,
        value: data[field.key],
        inList: false,
        selected: false,
        wrap: function wrap(_ref3) {
          var children = _ref3.children;
          return children;
        }
      }));
    });
  };

  return loading ? /*#__PURE__*/React__default['default'].createElement(xadminUi.Loading, null) : /*#__PURE__*/React__default['default'].createElement(antd.Form, null, /*#__PURE__*/React__default['default'].createElement(antd.Card, null, renderFields()));
};

var DataDetail = (function (props) {
  return /*#__PURE__*/React__default['default'].createElement(ModelInfo, _extends({}, props, app.use('model.get', props)));
});

function ownKeys$8(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$8(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$8(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$8(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var ActionBar = (function (props) {
  var _use = app.use('model'),
      model = _use.model;

  var _use2 = app.use('model.select'),
      count = _use2.count;

  var _use3 = app.use('model.batchActions'),
      renderActions = _use3.renderActions;

  var actions = renderActions(_objectSpread$8(_objectSpread$8({}, props), {}, {
    model: model
  }));
  return actions && actions.length > 0 ? /*#__PURE__*/React__default['default'].createElement(antd.Dropdown, {
    id: "model-list-actions",
    overlay: /*#__PURE__*/React__default['default'].createElement(antd.Menu, null, React__default['default'].Children.toArray(actions))
  }, /*#__PURE__*/React__default['default'].createElement(antd.Button, null, count > 0 ? xadminI18n._t('{{count}} record selected', {
    count: count
  }) : xadminI18n._t('No data selected'), " ", /*#__PURE__*/React__default['default'].createElement(icons.DownOutlined, null))) : /*#__PURE__*/React__default['default'].createElement("div", null);
});

function _createSuper$4(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$4(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$4() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var DetailModal = /*#__PURE__*/function (_React$Component) {
  _inherits(DetailModal, _React$Component);

  var _super = _createSuper$4(DetailModal);

  function DetailModal() {
    var _this;

    _classCallCheck(this, DetailModal);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      show: false
    });

    return _this;
  }

  _createClass(DetailModal, [{
    key: "showModal",
    value: function showModal() {
      this.setState({
        show: true
      });
    }
  }, {
    key: "hideModal",
    value: function hideModal() {
      this.setState({
        show: false
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          id = _this$props.id,
          children = _this$props.children;
      return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement("a", {
        style: {
          cursor: 'pointer'
        },
        onClick: this.showModal
      }, children), this.state.show && /*#__PURE__*/React__default['default'].createElement(antd.Modal, {
        visible: this.state.show,
        onCancel: this.hideModal,
        title: children
      }, /*#__PURE__*/React__default['default'].createElement(xadminUi.C, {
        is: "Model.DataDetail",
        id: id
      })));
    }
  }]);

  return DetailModal;
}(React__default['default'].Component);

var SearchBar = function SearchBar() {
  var _t = app__default['default'].context._t;

  var _use = app.use('model.searchbar'),
      onSearch = _use.onSearch,
      searchTitles = _use.searchTitles,
      searchValue = _use.searchValue;

  if (searchTitles && searchTitles.length > 0) {
    var placeholder = _t('Search') + ' ' + searchTitles.join(', ');
    return /*#__PURE__*/React__default['default'].createElement(antd.Input.Search, {
      placeholder: placeholder,
      onSearch: onSearch,
      defaultValue: searchValue || undefined,
      style: {
        width: 200
      }
    });
  }

  return null;
};

var BatchDeleteBtn = function BatchDeleteBtn(props) {
  var _t = app.app.context._t;

  var _React$useState = React__default['default'].useState(false),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      show = _React$useState2[0],
      setShow = _React$useState2[1];

  var _use = app.use('actons.batch_delete'),
      canDelete = _use.canDelete,
      loading = _use.loading,
      onBatchDelete = _use.onBatchDelete;

  var _use2 = app.use('model.select'),
      selected = _use2.selected;

  var _use3 = app.use('model'),
      model = _use3.model;

  var onClose = function onClose() {
    setShow(false);
  };

  var renderModel = function renderModel() {
    return /*#__PURE__*/React__default['default'].createElement(antd.Modal, {
      key: "actions_batch_delete_modal",
      title: _t('Confirm to delete selected items'),
      visible: show,
      onOk: function onOk() {
        onBatchDelete().then(onClose);
      },
      okText: _t('Delete'),
      okType: "danger",
      cancelText: _t('Cancel'),
      onCancel: onClose,
      okButtonProps: {
        loading: loading
      }
    }, /*#__PURE__*/React__default['default'].createElement(antd.List, {
      dataSource: selected,
      renderItem: function renderItem(item) {
        return /*#__PURE__*/React__default['default'].createElement(antd.List.Item, {
          key: item.id
        }, /*#__PURE__*/React__default['default'].createElement(xadminUi.Icon, {
          name: model.icon
        }), " ", model.display ? model.display(item) : item.name);
      }
    }));
  };

  return canDelete ? [/*#__PURE__*/React__default['default'].createElement(antd.Menu.Item, _extends({}, props, {
    key: 'actions_batch_delete',
    onClick: function onClick(e) {
      props.onClick && props.onClick(e);
      setShow(true);
    },
    disabled: selected.length == 0
  }), _t('Batch Delete Items')), selected.length > 0 ? renderModel() : null] : null;
};

function ownKeys$7(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$7(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$7(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$7(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var BatchChangeBtn = function BatchChangeBtn(props) {
  var _t = app.app.context._t;

  var _React$useState = React__default['default'].useState(false),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      show = _React$useState2[0],
      setShow = _React$useState2[1];

  var _use = app.use('actons.batch_change'),
      canEdit = _use.canEdit,
      fields = _use.fields,
      loading = _use.loading,
      onBatchChange = _use.onBatchChange;

  var _use2 = app.use('model.select'),
      selected = _use2.selected;

  var _use3 = app.use('model'),
      model = _use3.model;

  var onClose = function onClose() {
    return setShow(false);
  };

  var renderModel = function renderModel() {
    var fs = fields.map(function (f) {
      return f.split('.')[0];
    });
    return /*#__PURE__*/React__default['default'].createElement(xadminForm.SchemaForm, {
      key: "actions_batch_change_form",
      formKey: "model_batch.".concat(model.key),
      schema: ___default['default'].omit(_objectSpread$7(_objectSpread$7({}, model), {}, {
        properties: ___default['default'].pick(model.properties, fs),
        form: model.form !== undefined ? fs.map(function (name) {
          return ___default['default'].find(model.form, function (f) {
            return f && f.key == name;
          }) || name;
        }) : ['*']
      }), 'required'),
      onSubmit: onBatchChange,
      onSubmitSuccess: onClose,
      onClose: onClose
    }, function (_ref) {
      var children = _ref.children,
          invalid = _ref.invalid,
          handleSubmit = _ref.handleSubmit,
          submitting = _ref.submitting,
          onClose = _ref.onClose;
      return /*#__PURE__*/React__default['default'].createElement(antd.Modal, {
        key: "actions_batch_change_modal",
        visible: show,
        onClose: onClose,
        title: _t('Please input the value to batch change items'),
        okText: _t('Change'),
        onOk: handleSubmit,
        okButtonDisabled: invalid || submitting,
        cancelText: _t('Cancel'),
        onCancel: onClose,
        okButtonProps: {
          loading: loading
        }
      }, /*#__PURE__*/React__default['default'].createElement(antd.Form, {
        onSubmit: handleSubmit
      }, children));
    });
  };

  return canEdit && fields.length > 0 ? [/*#__PURE__*/React__default['default'].createElement(antd.Menu.Item, _extends({}, props, {
    key: "actions_batch_change",
    onClick: function onClick(e) {
      props.onClick && props.onClick(e);
      setShow(true);
    },
    disabled: selected.length == 0
  }), _t('Batch Change Items')), selected.length > 0 ? renderModel() : null] : null;
};

function ownKeys$6(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$6(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$6(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ChildrenModel = function ChildrenModel(props) {
  var _React$useState = React__default['default'].useState(false),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      show = _React$useState2[0],
      setShow = _React$useState2[1];

  var parent = props.parent,
      model = props.model,
      refFilter = props.refFilter,
      refData = props.refData,
      refField = props.refField,
      modelProps = props.modelProps,
      children = props.children,
      header = props.header;
      props.value;
      var onClose = props.onClose,
      refreshTimeout = props.refreshTimeout,
      extProps = _objectWithoutProperties(props, ["parent", "model", "refFilter", "refData", "refField", "modelProps", "children", "header", "value", "onClose", "refreshTimeout"]);

  var handleCancel = function handleCancel() {
    setShow(false);
    onClose && onClose();
  };

  var cmodel = ___default['default'].isString(model) ? app__default['default'].get('models')[model] : model;

  var schema = _objectSpread$6(_objectSpread$6({}, cmodel), {}, {
    parent: parent,
    itemActions: [].concat(_toConsumableArray(cmodel.itemActions || []), [function (item) {
      return /*#__PURE__*/React__default['default'].createElement(EditChildrenModelBtn, {
        id: item.id,
        refData: refData,
        refreshTimeout: refreshTimeout
      }, xadminI18n._t('Edit'));
    }]),
    permission: _objectSpread$6(_objectSpread$6({}, cmodel.permission), {}, {
      edit: false,
      childEdit: cmodel.permission && cmodel.permission.edit
    })
  }, modelProps);

  var initialValues = {
    wheres: {
      filters: refFilter || _defineProperty({}, refField, parent.id)
    }
  };
  var action = children && !___default['default'].isString(children) && /*#__PURE__*/React__default['default'].isValidElement(children) ? /*#__PURE__*/React__default['default'].cloneElement(children, {
    onClick: function onClick() {
      return setShow(true);
    }
  }) : /*#__PURE__*/React__default['default'].createElement(antd.Button, _extends({
    size: "small",
    key: "child-model-action",
    className: "model-list-action"
  }, extProps, {
    onClick: function onClick() {
      return setShow(true);
    }
  }), children || cmodel.title || cmodel.name);
  var ItemsComponent = cmodel.components && cmodel.components.DataList || xadminUi.C('Model.DataTable');
  return [action, show ? /*#__PURE__*/React__default['default'].createElement(xadminModel.Model, {
    schema: schema,
    modelKey: "".concat(___default['default'].isString(model) ? model : model.name, "_").concat(parent.id),
    initialValues: initialValues
  }, /*#__PURE__*/React__default['default'].createElement(antd.Modal, {
    key: 1,
    visible: show,
    title: header || cmodel.title || cmodel.name,
    width: "80%",
    onCancel: handleCancel,
    onOk: handleCancel
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    key: "model-list-subnav",
    style: {
      display: 'flex',
      justifyContent: 'space-between',
      marginBottom: '.5rem'
    }
  }, /*#__PURE__*/React__default['default'].createElement(xadminUi.C, {
    is: "Model.Pagination"
  }), /*#__PURE__*/React__default['default'].createElement(xadminUi.C, {
    is: "Model.ListSubMenu"
  }, /*#__PURE__*/React__default['default'].createElement(AddChildrenModelBtn, props))), /*#__PURE__*/React__default['default'].createElement(ItemsComponent, {
    key: "model-list-grid"
  }), /*#__PURE__*/React__default['default'].createElement("div", {
    key: "model-list-downnav",
    style: {
      display: 'flex',
      justifyContent: 'space-between',
      marginTop: '.5rem'
    }
  }, /*#__PURE__*/React__default['default'].createElement(xadminUi.C, {
    is: "Model.ActionBar"
  }), /*#__PURE__*/React__default['default'].createElement(xadminUi.C, {
    is: "Model.Pagination"
  })))) : null];
};

var AddChildrenModelBtn = function AddChildrenModelBtn(props) {
  var _React$useState3 = React__default['default'].useState(false),
      _React$useState4 = _slicedToArray(_React$useState3, 2),
      show = _React$useState4[0],
      setShow = _React$useState4[1];

  var _use = app.use('model'),
      model = _use.model;

  var _use2 = app.use('model.getItems'),
      getItems = _use2.getItems;

  var _use3 = app.use('model.permission'),
      canAdd = _use3.canAdd;

  var refData = props.refData,
      refreshTimeout = props.refreshTimeout;

  var onSuccess = function onSuccess() {
    if (refreshTimeout) {
      setTimeout(getItems, refreshTimeout);
    } else {
      getItems();
    }
  };

  return canAdd ? [/*#__PURE__*/React__default['default'].createElement(antd.Button, {
    key: 0,
    style: {
      marginLeft: '.5rem'
    },
    onClick: function onClick() {
      return setShow(true);
    }
  }, xadminI18n._t('Add {{object}}', {
    object: model.title
  })), /*#__PURE__*/React__default['default'].createElement(ChildrenFormModel, {
    key: 1,
    onSuccess: onSuccess,
    refData: refData,
    show: show,
    onClose: function onClose() {
      return setShow(false);
    }
  })] : null;
};

var EditChildrenModelBtn = function EditChildrenModelBtn(props) {
  var _React$useState5 = React__default['default'].useState(false),
      _React$useState6 = _slicedToArray(_React$useState5, 2),
      show = _React$useState6[0],
      setShow = _React$useState6[1];

  var _use4 = app.use('model'),
      model = _use4.model;

  var _use5 = app.use('model.getItems'),
      getItems = _use5.getItems;

  var id = props.id,
      refData = props.refData,
      refreshTimeout = props.refreshTimeout;
  var canChildEdit = !!model.permission && !!model.permission.childEdit;

  var onSuccess = function onSuccess() {
    if (refreshTimeout) {
      setTimeout(getItems, refreshTimeout);
    } else {
      getItems();
    }
  };

  return canChildEdit && [/*#__PURE__*/React__default['default'].createElement(antd.Button, {
    key: 0,
    size: "sm",
    className: "model-list-action",
    onClick: function onClick() {
      return setShow(true);
    }
  }, xadminI18n._t('Edit')), show ? /*#__PURE__*/React__default['default'].createElement(ChildrenFormModel, {
    key: 1,
    onSuccess: onSuccess,
    id: id,
    refData: refData,
    show: show,
    onClose: function onClose() {
      setShow(false);
    }
  }) : null];
};

var ChildrenFormModel = function ChildrenFormModel(props) {
  var show = props.show,
      title = props.title,
      onClose = props.onClose,
      modalProps = props.modalProps,
      onSuccess = props.onSuccess,
      refData = props.refData;

  var _use6 = app.use('model'),
      model = _use6.model;

  var _use7 = app.use('model.item', props),
      data = _use7.data,
      loading = _use7.loading,
      saveItem = _use7.saveItem;

  var onSubmitSuccess = function onSubmitSuccess(item) {
    onClose();
    onSuccess(item);
  };

  var onSaveItem = function onSaveItem(values) {
    saveItem(_objectSpread$6(_objectSpread$6({}, values), refData));
  };

  var FormLayout = function FormLayout(props) {
    var children = props.children,
        invalid = props.invalid,
        handleSubmit = props.handleSubmit,
        submitting = props.submitting;
    return /*#__PURE__*/React__default['default'].createElement(antd.Modal, _extends({}, modalProps, {
      visible: show,
      width: "70%",
      title: title,
      className: "xadmin-modal-form",
      onCancel: onClose,
      onOk: handleSubmit,
      okButtonDisabled: invalid || submitting,
      okText: /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement(xadminUi.Icon, {
        name: "ban"
      }), " ", xadminI18n._t('Save')),
      okButtonProps: {
        loading: submitting
      }
    }), /*#__PURE__*/React__default['default'].createElement(antd.Form, null, children));
  };

  return show && !loading ? /*#__PURE__*/React__default['default'].createElement(xadminForm.SchemaForm, {
    formKey: "model.modalform.".concat(model.key),
    schema: model,
    initialValues: _objectSpread$6(_objectSpread$6({}, data), refData),
    onSubmit: onSaveItem,
    onClose: onClose,
    component: FormLayout,
    onSubmitSuccess: onSubmitSuccess
  }) : null;
};

var BooleanIcon = (function (_ref) {
  var value = _ref.value,
      schema = _ref.schema;
  return value ? /*#__PURE__*/React__default['default'].createElement("div", {
    style: {
      width: '100%'
    }
  }, /*#__PURE__*/React__default['default'].createElement(xadminUi.Icon, {
    name: "check-circle",
    style: {
      color: 'green'
    }
  }), /*#__PURE__*/React__default['default'].createElement("span", {
    style: {
      display: 'none'
    }
  }, schema.trueText || xadminI18n._t('Yes'))) : /*#__PURE__*/React__default['default'].createElement("div", {
    style: {
      width: '100%'
    }
  }, /*#__PURE__*/React__default['default'].createElement(xadminUi.Icon, {
    name: "close-circle"
  }), /*#__PURE__*/React__default['default'].createElement("span", {
    style: {
      display: 'none'
    }
  }, schema.falseText || xadminI18n._t('No')));
});

var model = {
  components: {
    'Model.ListPage': ModelListPage,
    'Model.FormPage': ModelFormPage,
    'Model.DetailPage': ModelDetailPage,
    'Model.Pagination': Pagination,
    'Model.ActionBar': ActionBar,
    'Model.ListSubMenu': SubMenu,
    'Model.DataTable': DataTable,
    'Model.DataList': DataList,
    'Model.DataForm': ModelForm,
    'Model.DataDetail': DataDetail,
    'Model.DataItem': Item,
    'Model.ItemEditForm': ItemEditForm,
    'Model.DetailModal': DetailModal,
    'Model.SearchBar': SearchBar,
    'Model.BatchChange': BatchChangeBtn,
    'Model.BatchDelete': BatchDeleteBtn,
    'Model.ChildrenModel': ChildrenModel,
    'Model.BooleanIcon': BooleanIcon,
    'Model.ActionEdit': ActionEdit,
    'Model.ActionDelete': ActionDelete
  }
};

function ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$5(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var Option = antd.Select.Option;

var AsyncSelect = function AsyncSelect(_ref) {
  var value = _ref.value,
      isOptionSelected = _ref.isOptionSelected,
      label = _ref.label,
      onChange = _ref.onChange,
      style = _ref.style,
      field = _ref.field,
      extraProps = _objectWithoutProperties(_ref, ["value", "isOptionSelected", "label", "onChange", "style", "field"]);

  var _use = app.use('model.relate.select', {
    field: field
  }),
      loadOptions = _use.loadOptions,
      loading = _use.loading,
      options = _use.options;

  var data = React__default['default'].useMemo(function () {
    return options.reduce(function (prev, opt) {
      prev[opt.value] = _objectSpread$5({
        key: opt.value
      }, opt);
      return prev;
    }, {});
  }, [options]);

  var onItemChange = function onItemChange(selectOpt) {
    onChange(___default['default'].isArray(selectOpt) ? selectOpt.map(function (_ref2) {
      var key = _ref2.key;
      return data[key] || ___default['default'].find(value, function (v) {
        return v.key == key;
      }) || null;
    }).filter(Boolean) : data[selectOpt.key]);
  };

  var useOptions = React__default['default'].useMemo(function () {
    var options = Object.values(data);

    if (extraProps.mode == 'multiple' && value) {
      var selected = value.map(function (v) {
        return v.key;
      });
      options = options.filter(function (opt) {
        return selected.indexOf(opt.key) == -1;
      });
    }

    return options;
  }, [data, extraProps.mode, value]);
  return /*#__PURE__*/React__default['default'].createElement(antd.Select, _extends({
    showSearch: true,
    labelInValue: true,
    value: value ? value : isOptionSelected ? Object.values(data).filter(isOptionSelected) : undefined,
    notFoundContent: loading ? /*#__PURE__*/React__default['default'].createElement("div", {
      style: {
        margin: '2px',
        textAlign: 'center'
      }
    }, /*#__PURE__*/React__default['default'].createElement(antd.Spin, {
      size: "small"
    })) : /*#__PURE__*/React__default['default'].createElement(antd.Empty, null),
    onSearch: loadOptions,
    onChange: onItemChange,
    onBlur: function onBlur() {
      loadOptions(null);
    },
    filterOption: false,
    placeholder: label,
    style: _objectSpread$5({
      minWidth: 150
    }, style)
  }, extraProps), useOptions.map(function (d) {
    return /*#__PURE__*/React__default['default'].createElement(Option, {
      key: d.key
    }, d.label);
  }));
};

var RelateSelect = function RelateSelect(props) {
  var _props$input = props.input,
      item = _props$input.value,
      _onChange = _props$input.onChange,
      label = props.label,
      field = props.field;
  var displayField = field.displayField || 'name';
  return /*#__PURE__*/React__default['default'].createElement(AsyncSelect, {
    value: item ? {
      item: item,
      label: item[displayField],
      key: item.id
    } : null,
    onChange: function onChange(option) {
      _onChange(option.item);
    },
    field: field,
    label: label
  });
};

var RelateMultiSelect = function RelateMultiSelect(props) {
  var _props$input2 = props.input,
      items = _props$input2.value,
      _onChange2 = _props$input2.onChange,
      label = props.label,
      field = props.field;
  var displayField = field.displayField || 'name';
  return /*#__PURE__*/React__default['default'].createElement(AsyncSelect, {
    mode: "multiple",
    value: items ? items.map(function (item) {
      return {
        key: item.id,
        item: item,
        label: item[displayField]
      };
    }) : null,
    onChange: function onChange(options) {
      _onChange2(options.map(function (opt) {
        return opt.item;
      }));
    },
    field: field,
    label: label
  });
};

var FilterRelateSelect = function FilterRelateSelect(props) {
  var _props$input3 = props.input,
      selectId = _props$input3.value,
      _onChange3 = _props$input3.onChange,
      label = props.label,
      field = props.field;
  return /*#__PURE__*/React__default['default'].createElement(AsyncSelect, {
    isOptionSelected: function isOptionSelected(option) {
      return selectId && option.key == selectId;
    },
    onChange: function onChange(option) {
      _onChange3(option.value);
    },
    field: field,
    label: label
  });
};

var form_fields = {
  fkselect: {
    component: RelateSelect
  },
  multi_select: {
    component: RelateMultiSelect
  },
  filter_relate: {
    component: FilterRelateSelect,
    parse: function parse(value, name) {
      if (value && value.id) {
        return value.id;
      }

      return value;
    }
  }
};

var RelateContainer = function RelateContainer(_ref3) {
  var data = _ref3.data,
      model = _ref3.model,
      children = _ref3.children;
  return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement("h4", null, /*#__PURE__*/React__default['default'].createElement(xadminUi.Icon, {
    name: model.icon
  }), " ", data[model.displayField || 'name']), children);
};

var RelateAction = function RelateAction(_ref4) {
  var model = _ref4.model,
      item = _ref4.item,
      actions = _ref4.actions;
      _objectWithoutProperties(_ref4, ["model", "item", "actions"]);

  return /*#__PURE__*/React__default['default'].createElement(antd.Dropdown, {
    key: "dropdown-action-relate",
    overlay: /*#__PURE__*/React__default['default'].createElement(antd.Menu, null, actions.map(function (m, index) {
      return /*#__PURE__*/React__default['default'].createElement(antd.Menu.Item, {
        key: index,
        onClick: function onClick() {
          return app__default['default'].go("/app/model/".concat(model.name, "/").concat(item.id, "/relations/").concat(m.name, "/"));
        }
      }, m.title || m.name);
    }))
  }, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    size: "small",
    className: "model-list-action"
  }, xadminI18n._t('Relates')));
};

var relate = {
  components: {
    'Relate.Action': RelateAction,
    'Relate.Container': RelateContainer
  },
  form_fields: form_fields
};

function ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$4(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var Search = antd.Input.Search;

var useTextFilter = function useTextFilter(_ref) {
  var input = _ref.input;

  var _use = app.use('form'),
      form = _use.form;

  var value = input.value;
  var like = null;

  if (value == null || value == undefined || value == '') {
    value = '';
    like = app.config('filter') && app.config('filter').textDefaultSearch == true;
  } else if (value && value.like !== undefined) {
    value = value.like;
    like = true;
  } else {
    like = false;
  }

  var onChange = function onChange(_ref2) {
    var value = _ref2.value,
        like = _ref2.like;

    if (like) {
      input.onChange({
        like: value
      });
    } else {
      input.onChange(value);
    }
  };

  var onValueChange = function onValueChange(value) {
    if (like) {
      input.onChange({
        like: value
      });
    } else {
      input.onChange(value);
    }
  };

  var onLikeChange = function onLikeChange(like) {
    if (like) {
      input.onChange({
        like: value
      });
    } else {
      input.onChange(value);
    }
  };

  var onKeyPress = function onKeyPress(e) {
    if (e.key === 'Enter') {
      form.submit();
    }
  };

  var clear = function clear() {
    return onValueChange(null);
  };

  var changeModeBtn = /*#__PURE__*/React__default['default'].createElement(antd.Tooltip, {
    title: xadminI18n._t('Exact Search')
  }, /*#__PURE__*/React__default['default'].createElement(antd.Typography.Text, {
    type: !like ? 'success' : 'secondary',
    onClick: function onClick() {
      return onLikeChange(!like);
    },
    style: {
      cursor: 'pointer'
    }
  }, value == null || value == undefined || value == '' ? null : /*#__PURE__*/React__default['default'].createElement(icons.AimOutlined, null)));
  return {
    like: like,
    value: value,
    onChange: onChange,
    onValueChange: onValueChange,
    onLikeChange: onLikeChange,
    onKeyPress: onKeyPress,
    clear: clear,
    changeModeBtn: changeModeBtn
  };
};

var TextFilter = function TextFilter(props) {
  var _props$input = props.input;
      _props$input.name;
      _props$input.onBlur;
      _props$input.onChange;
      var inputProps = _objectWithoutProperties(_props$input, ["name", "onBlur", "onChange"]),
      label = props.label,
      field = props.field;

  var _useTextFilter = useTextFilter(props),
      value = _useTextFilter.value,
      changeModeBtn = _useTextFilter.changeModeBtn,
      onValueChange = _useTextFilter.onValueChange,
      onKeyPress = _useTextFilter.onKeyPress;

  return /*#__PURE__*/React__default['default'].createElement(antd.Input, _extends({}, inputProps, field.attrs, {
    value: value,
    suffix: changeModeBtn,
    onChange: function onChange(e) {
      return onValueChange(e.target.value);
    },
    onKeyPress: onKeyPress,
    placeholder: xadminI18n._t('Search {{label}}', {
      label: label
    })
  }));
};

var SearchTextFilter = function SearchTextFilter(props) {
  var _props$input2 = props.input;
      _props$input2.name;
      _props$input2.onBlur;
      _props$input2.onChange;
      var inputProps = _objectWithoutProperties(_props$input2, ["name", "onBlur", "onChange"]),
      onSubmit = props.onSubmit,
      label = props.label,
      field = props.field;

  var _useTextFilter2 = useTextFilter(props),
      value = _useTextFilter2.value,
      changeModeBtn = _useTextFilter2.changeModeBtn,
      onValueChange = _useTextFilter2.onValueChange;

  return /*#__PURE__*/React__default['default'].createElement(Search, _extends({}, inputProps, field.attrs, {
    value: value,
    suffix: changeModeBtn,
    onChange: function onChange(e) {
      return onValueChange(e.target.value);
    },
    onSearch: function onSearch(value) {
      onValueChange(value);
      onSubmit && onSubmit();
    },
    placeholder: xadminI18n._t('Search {{label}}', {
      label: label
    })
  }));
};

var SubmitOnChangeWrap = function SubmitOnChangeWrap(_ref3) {
  var input = _ref3.input,
      props = _objectWithoutProperties(_ref3, ["input"]);

  var _React$useState = React__default['default'].useState({
    value: null,
    typing: false
  }),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      state = _React$useState2[0],
      setState = _React$useState2[1];

  React__default['default'].useEffect(function () {
    if (!state.typing) {
      setState({
        value: input.value,
        typing: false
      });
    }
  }, [input.value]);

  var onSubmit = function onSubmit() {
    input.onChange(state.value);
    setState(_objectSpread$4(_objectSpread$4({}, state), {}, {
      typing: false
    }));
  };

  var onChange = function onChange(value) {
    return setState({
      value: value,
      typing: true
    });
  };

  return /*#__PURE__*/React__default['default'].createElement(SearchTextFilter, _extends({
    input: _objectSpread$4(_objectSpread$4({}, input), {}, {
      onChange: onChange,
      value: state.value
    })
  }, props, {
    onSubmit: onSubmit
  }));
};

var TextFilter$1 = (function (_ref4) {
  var option = _ref4.option,
      props = _objectWithoutProperties(_ref4, ["option"]);

  var submitOnChange = option && option.options && option.options.submitOnChange;
  return submitOnChange ? /*#__PURE__*/React__default['default'].createElement(SubmitOnChangeWrap, _extends({}, props, {
    option: option
  })) : /*#__PURE__*/React__default['default'].createElement(TextFilter, _extends({}, props, {
    option: option
  }));
});

var FilterEnum = function FilterEnum(props) {
  var _props$input = props.input,
      value = _props$input.value,
      onChange = _props$input.onChange,
      field = props.field;
  var placeholder = field && field.placeholder;
  var titleMap = field && field.titleMap;

  var selectChange = function selectChange(values) {
    var v = null;

    if (values.length > 1) {
      v = {
        $in: values
      };
    } else if (values.length > 0) {
      v = values[0];
    }

    onChange(v);
  };

  var seleted = []; // 初始化value

  if (value && value != '') {
    if (___default['default'].isString(value)) seleted = [value];
    if (___default['default'].isObject(value)) seleted = value.$in;
  }

  return /*#__PURE__*/React__default['default'].createElement(antd.Select, {
    mode: "multiple",
    style: {
      width: '100%'
    },
    placeholder: placeholder ? placeholder : '请选择',
    value: seleted,
    onChange: selectChange
  }, titleMap && titleMap.length > 0 && titleMap.map(function (item) {
    return /*#__PURE__*/React__default['default'].createElement(antd.Select.Option, {
      key: item.value
    }, item.name);
  }));
};

function ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$3(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var NumberFilter = function NumberFilter(props) {
  var _props$input = props.input;
      _props$input.name;
      var value = _props$input.value;
      _props$input.onBlur;
      var onChange = _props$input.onChange,
      inputProps = _objectWithoutProperties(_props$input, ["name", "value", "onBlur", "onChange"]),
      field = props.field;

  var _t = app__default['default'].context._t;
  var gte = !___default['default'].isNil(value.gte) ? value.gte : '';
  var lte = !___default['default'].isNil(value.lte) ? value.lte : '';

  var inputChange = function inputChange(v, k) {
    var vs = ___default['default'].pickBy(_objectSpread$3(_objectSpread$3({}, value), {}, _defineProperty({}, k, v)), ___default['default'].isNumber);

    onChange(___default['default'].isEmpty(vs) ? null : vs);
  };

  return /*#__PURE__*/React__default['default'].createElement("div", {
    style: {
      display: 'inline-flex'
    }
  }, /*#__PURE__*/React__default['default'].createElement(antd.InputNumber, _extends({}, inputProps, field.attrs, {
    style: _objectSpread$3({
      width: 'auto'
    }, field.style),
    value: gte,
    placeholder: field.minimum ? "Minimum(".concat(field.minimum, ")") : _t('No limit'),
    onChange: function onChange(v) {
      return inputChange(v, 'gte');
    }
  })), /*#__PURE__*/React__default['default'].createElement("span", {
    style: {
      textAlign: 'center',
      width: '2rem',
      lineHeight: '30px'
    }
  }, "~"), /*#__PURE__*/React__default['default'].createElement(antd.InputNumber, _extends({}, inputProps, field.attrs, {
    style: _objectSpread$3({
      width: 'auto'
    }, field.style),
    value: lte,
    placeholder: field.maximum ? "Maximum(".concat(field.maximum, ")") : _t('No limit'),
    onChange: function onChange(v) {
      return inputChange(v, 'lte');
    }
  })));
};

var BooleanFilter = (function (props) {
  var _props$input = props.input;
      _props$input.name;
      var value = _props$input.value,
      onChange = _props$input.onChange;
      _objectWithoutProperties(_props$input, ["name", "value", "onChange"]);
      var field = props.field;

  var disabled = value === null || value === undefined || value === '';
  return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement(antd.Tooltip, {
    title: xadminI18n._t('Use this filter')
  }, disabled ? /*#__PURE__*/React__default['default'].createElement(antd.Checkbox, {
    checked: false,
    onClick: function onClick() {
      return onChange(true);
    }
  }) : /*#__PURE__*/React__default['default'].createElement(antd.Checkbox, {
    checked: true,
    onClick: function onClick() {
      return onChange(null);
    }
  })), ' ', /*#__PURE__*/React__default['default'].createElement(antd.Switch, {
    checked: value,
    disabled: disabled,
    onChange: onChange,
    checkedChildren: field.boolLabel ? field.boolLabel[0] : xadminI18n._t('True'),
    unCheckedChildren: field.boolLabel ? field.boolLabel[1] : xadminI18n._t('False')
  }));
});

function _createSuper$3(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$3() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
antd.DatePicker.MonthPicker;
    var RangePicker = antd.DatePicker.RangePicker;
    antd.DatePicker.WeekPicker;

var DatePickerFilter = /*#__PURE__*/function (_React$Component) {
  _inherits(DatePickerFilter, _React$Component);

  var _super = _createSuper$3(DatePickerFilter);

  function DatePickerFilter() {
    var _this;

    _classCallCheck(this, DatePickerFilter);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "onRangeChange", function (value) {
      var input = _this.props.input;
      input.onChange(_this.getValue(value));
    });

    return _this;
  }

  _createClass(DatePickerFilter, [{
    key: "getValue",
    value: function getValue(value) {
      var field = this.props.field;
      var format = field.datetimeFormat || 'YYYY-MM-DD';
      return {
        rule: 'range',
        gte: value[0].format(format),
        lte: value[1].format(format)
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          input = _this$props.input,
          field = _this$props.field;
      var value = input.value;

      if (___default['default'].isPlainObject(value) && value.gte && value.lte) {
        var format = field.datetimeFormat || 'YYYY-MM-DD';
        value = [moment__default['default'](value.gte, format), moment__default['default'](value.lte, format)];
      }

      return /*#__PURE__*/React__default['default'].createElement(RangePicker, {
        onChange: this.onRangeChange,
        value: value
      });
    }
  }]);

  return DatePickerFilter;
}(React__default['default'].Component);

function ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$2(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$2() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var DateRange = /*#__PURE__*/function (_React$Component) {
  _inherits(DateRange, _React$Component);

  var _super = _createSuper$2(DateRange);

  function DateRange() {
    var _this;

    _classCallCheck(this, DateRange);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      endOpen: false
    });

    _defineProperty(_assertThisInitialized(_this), "disabledStartDate", function (startValue) {
      var field = _this.props.field;
      var endValue = _this.state.endValue;

      if (!startValue || !endValue) {
        return false;
      }

      if (field.attrs && field.attrs.maxDate && field.attrs.maxDate < startValue) {
        return true;
      }

      return startValue.valueOf() > endValue.valueOf();
    });

    _defineProperty(_assertThisInitialized(_this), "disabledEndDate", function (endValue) {
      var field = _this.props.field;
      var startValue = _this.state.startValue;

      if (!endValue || !startValue) {
        return false;
      }

      if (field.attrs && field.attrs.maxDate && field.attrs.maxDate < endValue) {
        return true;
      }

      return endValue.valueOf() <= startValue.valueOf();
    });

    _defineProperty(_assertThisInitialized(_this), "onChange", function (fieldKey, newValue) {
      var _objectSpread2;

      var _this$props$input = _this.props.input,
          onChange = _this$props$input.onChange,
          value = _this$props$input.value;
      var format = _this.props.field.datetimeFormat || 'YYYY-MM-DD HH:mm:ss';
      onChange(_objectSpread$2(_objectSpread$2({}, value), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, fieldKey, newValue.format(format)), _defineProperty(_objectSpread2, "rule", 'range'), _objectSpread2)));
    });

    _defineProperty(_assertThisInitialized(_this), "onStartChange", function (value) {
      _this.onChange('gte', value);
    });

    _defineProperty(_assertThisInitialized(_this), "onEndChange", function (value) {
      _this.onChange('lte', value);
    });

    _defineProperty(_assertThisInitialized(_this), "handleStartOpenChange", function (open) {
      if (!open) {
        _this.setState({
          endOpen: true
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleEndOpenChange", function (open) {
      _this.setState({
        endOpen: open
      });
    });

    return _this;
  }

  _createClass(DateRange, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          input = _this$props.input,
          field = _this$props.field;
      var format = field.datetimeFormat || 'YYYY-MM-DD HH:mm:ss';
      var inputValue = input.value;
      var endOpen = this.state.endOpen;
      var startValue = inputValue && inputValue.gte && moment__default['default'](inputValue.gte);
      var endValue = inputValue && inputValue.lte && moment__default['default'](inputValue.lte);
      return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement(antd.DatePicker, {
        disabledDate: this.disabledStartDate,
        showTime: true,
        format: format,
        value: startValue,
        placeholder: "\u8D77\u59CB",
        onChange: this.onStartChange,
        onOpenChange: this.handleStartOpenChange
      }), " \u5230", ' ', /*#__PURE__*/React__default['default'].createElement(antd.DatePicker, {
        disabledDate: this.disabledEndDate,
        showTime: true,
        format: format,
        value: endValue,
        placeholder: "\u7ED3\u675F",
        onChange: this.onEndChange,
        open: endOpen,
        onOpenChange: this.handleEndOpenChange
      }));
    }
  }]);

  return DateRange;
}(React__default['default'].Component);

function _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var useBreakpoint = antd.Grid.useBreakpoint;

var FilterForm = function FilterForm(_ref) {
  var children = _ref.children,
      invalid = _ref.invalid,
      handleSubmit = _ref.handleSubmit,
      submitting = _ref.submitting,
      options = _ref.options,
      resetFilter = _ref.resetFilter;
  var _t = app.app.context._t;
  return /*#__PURE__*/React__default['default'].createElement(antd.Form, {
    onSubmit: handleSubmit
  }, children, options && options.submitOnChange ? null : /*#__PURE__*/React__default['default'].createElement(antd.Form.Item, {
    style: {
      textAlign: 'center'
    }
  }, /*#__PURE__*/React__default['default'].createElement(antd.Space, null, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    disabled: invalid,
    loading: submitting,
    type: "primary",
    onClick: handleSubmit,
    icon: /*#__PURE__*/React__default['default'].createElement(icons.SearchOutlined, null)
  }, _t('Search')), /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    disabled: submitting,
    onClick: resetFilter
  }, _t('Reset')))));
};

var NavForm = function NavForm(_ref2) {
  var children = _ref2.children,
      invalid = _ref2.invalid,
      handleSubmit = _ref2.handleSubmit,
      submitting = _ref2.submitting,
      options = _ref2.options,
      resetFilter = _ref2.resetFilter;
  var _t = app.app.context._t;
  return /*#__PURE__*/React__default['default'].createElement(antd.Form, {
    layout: "inline",
    onSubmit: handleSubmit
  }, children, options && options.submitOnChange ? null : /*#__PURE__*/React__default['default'].createElement(antd.Form.Item, null, /*#__PURE__*/React__default['default'].createElement(antd.Space, null, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    disabled: invalid,
    loading: submitting,
    type: "primary",
    onClick: handleSubmit,
    icon: /*#__PURE__*/React__default['default'].createElement(icons.SearchOutlined, null)
  }, _t('Search')), /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    disabled: submitting,
    onClick: resetFilter
  }, _t('Reset')))));
};

var FilterOpenLink = function FilterOpenLink(_ref3) {
  var count = _ref3.count,
      onClick = _ref3.onClick,
      show = _ref3.show;
  var _t = app.app.context._t;
  var screens = useBreakpoint();
  return screens.xxl == false && count > 3 || count > 4 ? /*#__PURE__*/React__default['default'].createElement(antd.Typography.Link, {
    onClick: onClick
  }, show ? _t('Collapse') : _t('Expand')) : null;
};

var Submenu = function Submenu(_ref4) {
  var children = _ref4.children,
      invalid = _ref4.invalid,
      handleSubmit = _ref4.handleSubmit,
      submitting = _ref4.submitting,
      options = _ref4.options,
      resetFilter = _ref4.resetFilter;
  var _t = app.app.context._t;
  var defaultShowAllFilter = app.config('filter') && app.config('filter').submenuShowAllFilter == true;

  var _React$useState = React__default['default'].useState(defaultShowAllFilter),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      showAllFilter = _React$useState2[0],
      setShowAllFilter = _React$useState2[1];

  return /*#__PURE__*/React__default['default'].createElement(antd.Form, {
    className: "ant-advanced-search-form",
    onSubmit: handleSubmit
  }, /*#__PURE__*/React__default['default'].createElement(antd.Card, {
    style: {
      marginBottom: '.5rem',
      overflow: 'hidden'
    }
  }, /*#__PURE__*/React__default['default'].createElement(antd.Row, {
    gutter: 8,
    style: {
      flexWrap: children.length <= 3 || showAllFilter ? 'wrap' : 'nowrap'
    }
  }, children), options && options.submitOnChange ? null : /*#__PURE__*/React__default['default'].createElement(antd.Row, null, /*#__PURE__*/React__default['default'].createElement(antd.Col, {
    span: 24,
    style: {
      textAlign: 'center'
    }
  }, /*#__PURE__*/React__default['default'].createElement(antd.Space, null, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    disabled: invalid,
    loading: submitting,
    type: "primary",
    onClick: handleSubmit,
    icon: /*#__PURE__*/React__default['default'].createElement(icons.SearchOutlined, null)
  }, _t('Search')), /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    disabled: submitting,
    onClick: resetFilter
  }, _t('Reset')), /*#__PURE__*/React__default['default'].createElement(FilterOpenLink, {
    count: children.length,
    onClick: function onClick() {
      return setShowAllFilter(!showAllFilter);
    },
    show: showAllFilter
  }))))));
};

var FilterModal = /*#__PURE__*/function (_React$Component) {
  _inherits(FilterModal, _React$Component);

  var _super = _createSuper$1(FilterModal);

  function FilterModal() {
    var _this;

    _classCallCheck(this, FilterModal);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      show: false
    });

    _defineProperty(_assertThisInitialized(_this), "onClose", function () {
      _this.setState({
        show: false
      });
    });

    return _this;
  }

  _createClass(FilterModal, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _t = app.app.context._t;
      var _this$props = this.props,
          children = _this$props.children,
          invalid = _this$props.invalid,
          handleSubmit = _this$props.handleSubmit,
          submitting = _this$props.submitting,
          options = _this$props.options,
          resetFilter = _this$props.resetFilter;
      var buttons = options && options.submitOnChange ? {} : {
        okText: _t('Search'),
        cancelText: _t('Reset'),
        okButtonProps: {
          disabled: invalid,
          loading: submitting,
          icon: /*#__PURE__*/React__default['default'].createElement(icons.SearchOutlined, null)
        },
        onOk: function onOk() {
          handleSubmit();

          _this2.onClose();
        },
        onCancel: function onCancel() {
          resetFilter();

          _this2.onClose();
        }
      };
      return [/*#__PURE__*/React__default['default'].createElement(antd.Button, {
        key: "filter-btn",
        onClick: function onClick() {
          return _this2.setState({
            show: true
          });
        }
      }, /*#__PURE__*/React__default['default'].createElement(icons.FilterOutlined, null), " ", _t('Filter')), /*#__PURE__*/React__default['default'].createElement(antd.Modal, _extends({
        key: "filter-modal",
        title: _t('Filter Form'),
        visible: this.state.show
      }, buttons), /*#__PURE__*/React__default['default'].createElement(antd.Form, {
        onSubmit: handleSubmit
      }, children))];
    }
  }]);

  return FilterModal;
}(React__default['default'].Component);

var filter = {
  components: {
    'Filter.Form': FilterForm,
    'Filter.NavForm': NavForm,
    'Filter.Submenu': Submenu,
    'Filter.Modal': FilterModal
  },
  form_fields: {
    filter_text: {
      component: TextFilter$1
    },
    filter_enum: {
      component: FilterEnum
    },
    filter_number: {
      component: NumberFilter
    },
    filter_bool: {
      component: BooleanFilter
    },
    filter_date: {
      component: DatePickerFilter
    },
    filter_datetime: {
      component: DateRange
    }
  }
};

var SigininLayout = function SigininLayout(_ref) {
  var error = _ref.error,
      children = _ref.children;
      _ref.invalid;
      var handleSubmit = _ref.handleSubmit,
      submitting = _ref.submitting;
  var _t = app__default['default'].context._t;

  var _app$get = app__default['default'].get('config'),
      auth = _app$get.auth;

  var nav = app.use('navigate');
  return /*#__PURE__*/React__default['default'].createElement("div", null, /*#__PURE__*/React__default['default'].createElement(antd.Form, {
    className: "sigin-form",
    onSubmit: handleSubmit
  }, /*#__PURE__*/React__default['default'].createElement(antd.Card, {
    style: {
      maxWidth: 450,
      margin: '5rem auto',
      marginBottom: '-0.5rem'
    },
    title: _t('Please Login')
  }, children, error && /*#__PURE__*/React__default['default'].createElement(antd.Alert, {
    message: error,
    type: "error"
  }), /*#__PURE__*/React__default['default'].createElement(antd.Form.Item, {
    wrapperCol: {
      xs: {
        span: 24
      },
      sm: {
        span: 18,
        offset: 5
      }
    }
  }, auth.can_reset_password && /*#__PURE__*/React__default['default'].createElement("div", null, _t('Forgot password'), "? ", /*#__PURE__*/React__default['default'].createElement("a", {
    onClick: function onClick() {
      return nav('/forget_password');
    }
  }, _t('reset password'))), /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    type: "primary",
    loading: submitting,
    onClick: handleSubmit,
    htmlType: "submit",
    className: "login-form-button"
  }, _t('Login')), auth.can_signup && /*#__PURE__*/React__default['default'].createElement("div", null, _t('Not registed'), "? ", /*#__PURE__*/React__default['default'].createElement("a", {
    onClick: function onClick() {
      return nav('/signup');
    }
  }, _t('please signup')))))));
};

var Signup = (function (_ref) {
  var error = _ref.error,
      children = _ref.children,
      invalid = _ref.invalid,
      handleSubmit = _ref.handleSubmit,
      submitting = _ref.submitting;
  return /*#__PURE__*/React__default['default'].createElement("div", null, /*#__PURE__*/React__default['default'].createElement(antd.Form, {
    className: "sigin-form",
    onSubmit: handleSubmit
  }, /*#__PURE__*/React__default['default'].createElement(antd.Card, {
    style: {
      maxWidth: 450,
      margin: '5rem auto',
      marginBottom: '-0.5rem'
    },
    title: xadminI18n._t('Please Signup')
  }, children, error && /*#__PURE__*/React__default['default'].createElement(antd.Alert, {
    message: error,
    type: "error"
  }), /*#__PURE__*/React__default['default'].createElement(antd.Form.Item, {
    wrapperCol: {
      xs: {
        span: 24
      },
      sm: {
        span: 18,
        offset: 5
      }
    }
  }, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    type: "primary",
    disabled: invalid,
    loading: submitting,
    onClick: handleSubmit,
    htmlType: "submit",
    className: "signup-form-button"
  }, xadminI18n._t('Signup')), /*#__PURE__*/React__default['default'].createElement("div", null, xadminI18n._t('Have account'), "? ", /*#__PURE__*/React__default['default'].createElement("a", {
    onClick: function onClick() {
      return app__default['default'].go('/login');
    }
  }, xadminI18n._t('please login')))))));
});

var UserMenu = (function (props) {
  var _use = app.use('auth.user'),
      user = _use.user;

  var _use2 = app.use('auth.logout'),
      onLogout = _use2.onLogout;

  var nav = app.use('navigate');
  return user && /*#__PURE__*/React__default['default'].createElement(app.Block, {
    name: "top.user.menu"
  }, function (items) {
    return /*#__PURE__*/React__default['default'].createElement(antd.Menu.SubMenu, _extends({
      key: "user-dorpdown"
    }, props, {
      title: /*#__PURE__*/React__default['default'].createElement("span", {
        className: "submenu-title-wrapper"
      }, /*#__PURE__*/React__default['default'].createElement(xadminUi.Icon, {
        name: "user"
      }), " ", user.username)
    }), items, /*#__PURE__*/React__default['default'].createElement(antd.Menu.Item, {
      key: 1,
      onClick: function onClick() {
        return nav('/app/change_password');
      }
    }, xadminI18n._t('Change password')), /*#__PURE__*/React__default['default'].createElement(antd.Menu.Item, {
      key: 2,
      onClick: onLogout
    }, xadminI18n._t('Logout')));
  });
});

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var CaptchaCodeInput = /*#__PURE__*/function (_React$Component) {
  _inherits(CaptchaCodeInput, _React$Component);

  var _super = _createSuper(CaptchaCodeInput);

  function CaptchaCodeInput(props, context) {
    var _this;

    _classCallCheck(this, CaptchaCodeInput);

    _this = _super.call(this, props, context);
    _this.state = {
      url: _this.getCodeUrl()
    };
    return _this;
  }

  _createClass(CaptchaCodeInput, [{
    key: "getCodeUrl",
    value: function getCodeUrl() {
      var field = this.props.field;
      return app.api({}).host + (field.captcha_url || '/get_captcha_code') + '?random=' + Math.random().toString();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          input = _this$props.input,
          field = _this$props.field;
      var _t = app.app.context._t;
      return /*#__PURE__*/React__default['default'].createElement(antd.Row, {
        gutter: 8
      }, /*#__PURE__*/React__default['default'].createElement(antd.Col, {
        span: 14
      }, /*#__PURE__*/React__default['default'].createElement(antd.Input, _extends({}, input, field.attrs))), /*#__PURE__*/React__default['default'].createElement(antd.Col, {
        span: 10
      }, /*#__PURE__*/React__default['default'].createElement(antd.Tooltip, {
        title: _t('Click to refresh captcha code')
      }, /*#__PURE__*/React__default['default'].createElement("img", {
        style: {
          cursor: 'pointer',
          width: '100%'
        },
        onClick: function onClick() {
          return _this2.setState({
            url: _this2.getCodeUrl()
          });
        },
        src: this.state.url
      }))));
    }
  }]);

  return CaptchaCodeInput;
}(React__default['default'].Component);

var ForgetPassword = (function (_ref) {
  var error = _ref.error,
      children = _ref.children,
      invalid = _ref.invalid,
      handleSubmit = _ref.handleSubmit,
      submitting = _ref.submitting;
  return /*#__PURE__*/React__default['default'].createElement("div", null, /*#__PURE__*/React__default['default'].createElement(antd.Form, {
    className: "sigin-form",
    onSubmit: handleSubmit
  }, /*#__PURE__*/React__default['default'].createElement(antd.Card, {
    style: {
      maxWidth: 550,
      margin: '5rem auto',
      marginBottom: '-0.5rem'
    },
    title: xadminI18n._t('Reset Password')
  }, children, error && /*#__PURE__*/React__default['default'].createElement(antd.Alert, {
    message: error,
    type: "error"
  }), /*#__PURE__*/React__default['default'].createElement(antd.Form.Item, {
    wrapperCol: {
      xs: {
        span: 24
      },
      sm: {
        span: 18,
        offset: 5
      }
    }
  }, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    type: "primary",
    disabled: invalid,
    loading: submitting,
    onClick: handleSubmit,
    htmlType: "submit"
  }, xadminI18n._t('Send Email to Reset Password'))))));
});

var ResetPassword = (function (_ref) {
  var error = _ref.error,
      children = _ref.children,
      invalid = _ref.invalid,
      handleSubmit = _ref.handleSubmit,
      submitting = _ref.submitting;
  return /*#__PURE__*/React__default['default'].createElement("div", null, /*#__PURE__*/React__default['default'].createElement(antd.Form, {
    className: "sigin-form",
    onSubmit: handleSubmit
  }, /*#__PURE__*/React__default['default'].createElement(antd.Card, {
    style: {
      maxWidth: 450,
      margin: '5rem auto',
      marginBottom: '-0.5rem'
    },
    title: xadminI18n._t('Reset Password')
  }, children, error && /*#__PURE__*/React__default['default'].createElement(antd.Alert, {
    message: error,
    type: "error"
  }), /*#__PURE__*/React__default['default'].createElement(antd.Form.Item, {
    wrapperCol: {
      xs: {
        span: 24
      },
      sm: {
        span: 18,
        offset: 5
      }
    }
  }, /*#__PURE__*/React__default['default'].createElement(antd.Button, {
    type: "primary",
    disabled: invalid,
    loading: submitting,
    onClick: handleSubmit,
    htmlType: "submit"
  }, xadminI18n._t('Reset Password'))))));
});

var auth = {
  components: {
    'Auth.Signin': SigininLayout,
    'Auth.Signup': Signup,
    'Auth.UserMenu': UserMenu,
    'Auth.ForgetPassword': ForgetPassword,
    'Auth.ResetPassword': ResetPassword
  },
  form_fields: {
    captcha: {
      component: CaptchaCodeInput
    }
  }
};

var runtime_1 = createCommonjsModule(function (module) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined$1; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined$1) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined$1;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined$1;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined$1;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined$1, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined$1;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined$1;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined$1;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined$1;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined$1;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
  module.exports 
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}
});

var regenerator = runtime_1;

var createSymbol = function createSymbol(name) {
  return "@@redux-saga/" + name;
};
var IO =
/*#__PURE__*/
createSymbol('IO');
var MULTICAST =
/*#__PURE__*/
createSymbol('MULTICAST');

var notUndef = function notUndef(v) {
  return v !== null && v !== undefined;
};
var func = function func(f) {
  return typeof f === 'function';
};
var string = function string(s) {
  return typeof s === 'string';
};
var array = Array.isArray;
var object = function object(obj) {
  return obj && !array(obj) && typeof obj === 'object';
};
var pattern = function pattern(pat) {
  return pat && (string(pat) || symbol(pat) || func(pat) || array(pat) && pat.every(pattern));
};
var channel = function channel(ch) {
  return ch && func(ch.take) && func(ch.close);
};
var stringableFunc = function stringableFunc(f) {
  return func(f) && f.hasOwnProperty('toString');
};
var symbol = function symbol(sym) {
  return Boolean(sym) && typeof Symbol === 'function' && sym.constructor === Symbol && sym !== Symbol.prototype;
};
var multicast = function multicast(ch) {
  return channel(ch) && ch[MULTICAST];
};
var effect = function effect(eff) {
  return eff && eff[IO];
};

function check(value, predicate, error) {
  if (!predicate(value)) {
    throw new Error(error);
  }
}

var kThrow = function kThrow(err) {
  throw err;
};

var kReturn = function kReturn(value) {
  return {
    value: value,
    done: true
  };
};

function makeIterator(next, thro, name) {
  if (thro === void 0) {
    thro = kThrow;
  }

  if (name === void 0) {
    name = 'iterator';
  }

  var iterator = {
    meta: {
      name: name
    },
    next: next,
    throw: thro,
    return: kReturn,
    isSagaIterator: true
  };

  if (typeof Symbol !== 'undefined') {
    iterator[Symbol.iterator] = function () {
      return iterator;
    };
  }

  return iterator;
}

var TAKE = 'TAKE';
var FORK = 'FORK';

var makeEffect = function makeEffect(type, payload) {
  var _ref;

  return _ref = {}, _ref[IO] = true, _ref.combinator = false, _ref.type = type, _ref.payload = payload, _ref;
};
function take(patternOrChannel, multicastPattern) {
  if (patternOrChannel === void 0) {
    patternOrChannel = '*';
  }

  if (arguments.length) {
    check(arguments[0], notUndef, 'take(patternOrChannel): patternOrChannel is undefined');
  }

  if (pattern(patternOrChannel)) {
    return makeEffect(TAKE, {
      pattern: patternOrChannel
    });
  }

  if (multicast(patternOrChannel) && notUndef(multicastPattern) && pattern(multicastPattern)) {
    return makeEffect(TAKE, {
      channel: patternOrChannel,
      pattern: multicastPattern
    });
  }

  if (channel(patternOrChannel)) {
    return makeEffect(TAKE, {
      channel: patternOrChannel
    });
  }

  {
    throw new Error("take(patternOrChannel): argument " + patternOrChannel + " is not valid channel or a valid pattern");
  }
}

var validateFnDescriptor = function validateFnDescriptor(effectName, fnDescriptor) {
  check(fnDescriptor, notUndef, effectName + ": argument fn is undefined or null");

  if (func(fnDescriptor)) {
    return;
  }

  var context = null;
  var fn;

  if (array(fnDescriptor)) {
    context = fnDescriptor[0];
    fn = fnDescriptor[1];
    check(fn, notUndef, effectName + ": argument of type [context, fn] has undefined or null `fn`");
  } else if (object(fnDescriptor)) {
    context = fnDescriptor.context;
    fn = fnDescriptor.fn;
    check(fn, notUndef, effectName + ": argument of type {context, fn} has undefined or null `fn`");
  } else {
    check(fnDescriptor, func, effectName + ": argument fn is not function");
    return;
  }

  if (context && string(fn)) {
    check(context[fn], func, effectName + ": context arguments has no such method - \"" + fn + "\"");
    return;
  }

  check(fn, func, effectName + ": unpacked fn argument (from [context, fn] or {context, fn}) is not a function");
};

function getFnCallDescriptor(fnDescriptor, args) {
  var context = null;
  var fn;

  if (func(fnDescriptor)) {
    fn = fnDescriptor;
  } else {
    if (array(fnDescriptor)) {
      context = fnDescriptor[0];
      fn = fnDescriptor[1];
    } else {
      context = fnDescriptor.context;
      fn = fnDescriptor.fn;
    }

    if (context && string(fn) && func(context[fn])) {
      fn = context[fn];
    }
  }

  return {
    context: context,
    fn: fn,
    args: args
  };
}
function fork(fnDescriptor) {
  {
    validateFnDescriptor('fork', fnDescriptor);
    check(fnDescriptor, function (arg) {
      return !effect(arg);
    }, 'fork: argument must not be an effect');
  }

  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    args[_key3 - 1] = arguments[_key3];
  }

  return makeEffect(FORK, getFnCallDescriptor(fnDescriptor, args));
}

var done = function done(value) {
  return {
    done: true,
    value: value
  };
};

var qEnd = {};
function safeName(patternOrChannel) {
  if (channel(patternOrChannel)) {
    return 'channel';
  }

  if (stringableFunc(patternOrChannel)) {
    return String(patternOrChannel);
  }

  if (func(patternOrChannel)) {
    return patternOrChannel.name;
  }

  return String(patternOrChannel);
}
function fsmIterator(fsm, startState, name) {
  var stateUpdater,
      errorState,
      effect,
      nextState = startState;

  function next(arg, error) {
    if (nextState === qEnd) {
      return done(arg);
    }

    if (error && !errorState) {
      nextState = qEnd;
      throw error;
    } else {
      stateUpdater && stateUpdater(arg);
      var currentState = error ? fsm[errorState](error) : fsm[nextState]();
      nextState = currentState.nextState;
      effect = currentState.effect;
      stateUpdater = currentState.stateUpdater;
      errorState = currentState.errorState;
      return nextState === qEnd ? done(arg) : effect;
    }
  }

  return makeIterator(next, function (error) {
    return next(null, error);
  }, name);
}

function takeEvery(patternOrChannel, worker) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var yTake = {
    done: false,
    value: take(patternOrChannel)
  };

  var yFork = function yFork(ac) {
    return {
      done: false,
      value: fork.apply(void 0, [worker].concat(args, [ac]))
    };
  };

  var action,
      setAction = function setAction(ac) {
    return action = ac;
  };

  return fsmIterator({
    q1: function q1() {
      return {
        nextState: 'q2',
        effect: yTake,
        stateUpdater: setAction
      };
    },
    q2: function q2() {
      return {
        nextState: 'q1',
        effect: yFork(action)
      };
    }
  }, 'q1', "takeEvery(" + safeName(patternOrChannel) + ", " + worker.name + ")");
}

var validateTakeEffect = function validateTakeEffect(fn, patternOrChannel, worker) {
  check(patternOrChannel, notUndef, fn.name + " requires a pattern or channel");
  check(worker, notUndef, fn.name + " requires a saga parameter");
};

function takeEvery$1(patternOrChannel, worker) {
  {
    validateTakeEffect(takeEvery$1, patternOrChannel, worker);
  }

  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  return fork.apply(void 0, [takeEvery, patternOrChannel, worker].concat(args));
}

var _marked = /*#__PURE__*/regenerator.mark(_callee);

function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function handle_message(_ref) {
  _ref.type;
      var payload = _ref.payload,
      props = _objectWithoutProperties(_ref, ["type", "payload"]);

  var _props$payload = _objectSpread$1(_objectSpread$1({}, props), payload),
      _props$payload$type = _props$payload.type,
      type = _props$payload$type === void 0 ? 'info' : _props$payload$type,
      content = _props$payload.message;

  if (type == 'success') {
    antd.message.success(content);
  } else if (type == 'danger') {
    antd.message.error(content);
  } else if (type == 'warning') {
    antd.message.warning(content);
  } else if (type == 'info') {
    antd.message.info(content);
  }
}

function _callee() {
  return regenerator.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return takeEvery$1(function (action) {
            return action.type == '@@xadmin/ADD_NOTICE';
          }, handle_message);

        case 2:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}

var locales = {
  zh_Hans: {
    translation: {
      'Exact Search': '精确搜索',
      'Fuzzy Search': '模糊搜索',
      'Use this filter': '开启过滤'
    }
  }
};

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
var index = {
  name: 'xadmin.ui.antd',
  locales: locales,
  components: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({
    Main: Main,
    App: App,
    BaseApp: App,
    Page: Page,
    Loading: Loading,
    Icon: Icon,
    Dashboard: Dashboard,
    Menu: antd.Menu,
    'Menu.Item': MenuItem
  }, form.components), model.components), filter.components), relate.components), auth.components),
  form_fields: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, form.form_fields), filter.form_fields), relate.form_fields), auth.form_fields),
  hooks: {
    'message': function message() {
      return antd.message;
    }
  },
  effects: _callee
};

exports.default = index;

Object.defineProperty(exports, '__esModule', { value: true });

})));
